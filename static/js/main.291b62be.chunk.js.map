{"version":3,"sources":["components/players/PlayerList.module.css","components/players/PlayerItem.module.css","components/playersmanage/PlayerList.module.css","components/playersmanage/NewPlayerForm.module.css","components/profile/EditPlayerForm.module.css","components/layout/Layout.module.css","components/ui/Card.module.css","components/profile/ProfileIcon.module.css","components/layout/MainNavigation.js","config.js","store/player-context.js","components/layout/Layout.js","general/helpers.js","components/players/PlayerItem.js","components/players/PlayerList.js","pages/Players.js","components/ui/Card.js","components/playersmanage/NewPlayerForm.js","components/playersmanage/PlayerList.js","pages/PlayersManage.js","components/profile/ProfileIcon.js","components/profile/EditPlayerForm.js","components/profile/Profile.js","pages/Profile.js","App.js","index.js"],"names":["module","exports","MainNavigation","props","List","spacing","size","center","icon","ThemeIcon","color","radius","Item","Anchor","component","Link","to","onClick","pageChanged","API_URL","PlayersContext","createContext","groupName","players","selectedPlayers","profilePlayerScores","totalSelectedPlayers","profileId","profileName","profileImgSrc","loadPlayers","updatePlayers","player","loadProfilePlayerScores","playerScores","updateProfilePlayerScore","playerScore","addSelectedPlayer","selectedPlayer","removeSelectedPlayer","playerId","itemIsSelectedPlayer","updateProfileId","updateProfileName","name","updateProfileImgSrc","imgSrc","updateInitialItemIndex","initialItemIndex","PlayersContextProvider","useState","setGroupName","setPlayers","userSelectedPlayers","setUserSelectedPlayers","setProfilePlayerScores","setProfileId","setProfileName","setProfileImgSrc","setInitialItemIndex","context","length","loadGroupName","newGroupName","prevGroupName","localStorage","getItem","prevProfileId","prevPlayers","updatePlayer","prevUserSelectedPlayers","concat","filter","id","some","prevPlayerScores","type","value","currentScore","find","s","undefined","attack","defense","stamina","push","playerid","prevProfileName","prevProfileImgSrc","prevInitialItemIndex","Provider","children","Layout","useContext","opened","setOpened","theme","useMantineTheme","AppShell","padding","header","Header","height","style","backgroundColor","display","alignItems","MediaQuery","largerThan","styles","Burger","o","colors","gray","mr","Group","noWrap","float","Avatar","src","flex","Text","weight","navbar","Navbar","hiddenBreakpoint","hidden","width","sm","lg","main","colorScheme","dark","className","classes","getPlayerScore","scoredPlayerId","playerScoreObj","construction","Math","ceil","parseInt","resistence","technique","combinationUtil","arr","data","start","end","index","r","combinations","allPlayers","combPlayers","teamA","teamAIds","map","teamB","p","indexOf","attackA","reduce","previousValue","currentValue","defenseA","staminaA","teamBIds","attackB","defenseB","staminaB","getCombinationItem","slice","i","getCombinations","n","Array","PlayerItem","playersCxt","playerIsSelected","activeClass","teama","teamb","info","light","shadow","bg","text","marginBottom","cursor","gap","marginLeft","divcircle","buildStyles","pathColor","textColor","textSize","hideCheckbox","Checkbox","checked","onChange","tabIndex","PlayerList","matchNumber","setMatchNumber","bestMatchups","setBestMatchups","useEffect","floor","teamCombinations","sortedTeamCombinations","team","difference","abs","sort","a","b","parseFloat","matchTeam","teamAtotalScore","teamBtotalScore","list","Grid","Col","md","Divider","my","label","labelPosition","variant","Box","sx","textAlign","fontWeight","ActionIcon","disabled","toLocaleString","minimumFractionDigits","maximumFractionDigits","marginRight","paddingTop","position","marginTop","Badge","textTransform","PlayersPage","playersCtx","isLoading","setIsLoading","error","setError","fetchPlayersHandler","useCallback","console","log","fetch","getApiUrl","response","ok","Error","json","key","playersData","playedData","sum","count","currentPlayer","message","Card","card","NewPlayerForm","addingPlayer","setAddingPlayer","nameInputRef","useRef","Button","leftIcon","event","margin","form","onSubmit","preventDefault","enteredName","current","onAddPlayer","TextInput","required","placeholder","ref","actions","ml","AccordionLabel","image","notifications","useNotifications","accItemScoresUpdated","setAccItemScoresUpdated","saveScore","replace","method","body","JSON","stringify","headers","then","showNotification","title","CheckboxIcon","autoClose","updateScoreItem","Accordion","initialItem","iconPosition","state","onToggle","Slider","min","defaultValue","PlayersManagePage","history","useHistory","playerName","playerData","max","apply","y","ProfileIcon","onAvatarClicked","actionicon","isSelected","ICONS_LIST","EditPlayerForm","setName","setImgSrc","onAvatarClickedHandler","onUpdatePlayer","e","target","item","Profile","selectData","SelectItem","forwardRef","others","Select","itemComponent","maxDropdownHeight","nothingFound","setItem","x","updatedPlayer","allPlayersUpdated","newName","ProfilePage","App","path","exact","Players","PlayersManage","ReactDOM","render","MantineProvider","NotificationsProvider","document","getElementById"],"mappings":"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","file":"static/js/main.291b62be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PlayerList_list__2ZZ1i\",\"row\":\"PlayerList_row__1HPZC\",\"col6\":\"PlayerList_col6__3Vc1Q\",\"divcircle\":\"PlayerList_divcircle__1b2ZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"PlayerItem_info__IOYoZ\",\"teama\":\"PlayerItem_teama__j6dyZ\",\"teamb\":\"PlayerItem_teamb__2fGz3\",\"light\":\"PlayerItem_light__mB-wX\",\"divcircle\":\"PlayerItem_divcircle__o2n7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divcircle\":\"PlayerList_divcircle__1VZaT\",\"actions\":\"PlayerList_actions__qh5j_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewPlayerForm_form__7c21Z\",\"control\":\"NewPlayerForm_control__1eeMn\",\"actions\":\"NewPlayerForm_actions__2_KN1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"EditPlayerForm_form__13RZ4\",\"control\":\"EditPlayerForm_control__3JmoC\",\"actions\":\"EditPlayerForm_actions__1vyl8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__3QUDM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__39fCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionicon\":\"ProfileIcon_actionicon__1Erhd\"};","import { Anchor, List, ThemeIcon } from \"@mantine/core\";\r\nimport { SiMicrosoftteams } from \"react-icons/si\";\r\nimport { RiTeamLine } from \"react-icons/ri\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MainNavigation = (props) => {\r\n  return (\r\n    <List\r\n      spacing=\"xs\"\r\n      size=\"sm\"\r\n      center\r\n      icon={\r\n        <ThemeIcon color=\"teal\" size={24} radius=\"xl\">\r\n          <SiMicrosoftteams size={12} />\r\n        </ThemeIcon>\r\n      }\r\n    >\r\n      <List.Item>\r\n        <Anchor component={Link} to=\"/\" onClick={props.pageChanged}>\r\n          Generate teams\r\n        </Anchor>\r\n      </List.Item>\r\n      <List.Item\r\n        icon={\r\n          <ThemeIcon color=\"blue\" size={24} radius=\"xl\">\r\n            <RiTeamLine size={12} />\r\n          </ThemeIcon>\r\n        }\r\n      >\r\n        <Anchor component={Link} to=\"/manage\" onClick={props.pageChanged}>\r\n          Score teammates\r\n        </Anchor>\r\n      </List.Item>\r\n      <List.Item\r\n        icon={\r\n          <ThemeIcon color=\"blue\" size={24} radius=\"xl\">\r\n            <CgProfile size={12} />\r\n          </ThemeIcon>\r\n        }\r\n      >\r\n        <Anchor component={Link} to=\"/profile\" onClick={props.pageChanged}>\r\n          My Profile\r\n        </Anchor>\r\n      </List.Item>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","const API_URL = \"https://udemy-ng-http-5d0d5.firebaseio.com/playersv2.json\";\r\n\r\nexport { API_URL };\r\n","import { createContext } from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport { API_URL } from \"../config\";\r\n\r\nconst PlayersContext = createContext({\r\n  groupName: \"\",\r\n  players: [],\r\n  selectedPlayers: [],\r\n  profilePlayerScores: [],\r\n  totalSelectedPlayers: 0,\r\n  profileId: 0,\r\n  profileName: \"\",\r\n  profileImgSrc: \"\",\r\n  loadPlayers: (players) => {},\r\n  updatePlayers: (player) => {},\r\n  loadProfilePlayerScores: (playerScores) => {},\r\n  updateProfilePlayerScore: (playerScore) => {},\r\n  addSelectedPlayer: (selectedPlayer) => {},\r\n  removeSelectedPlayer: (playerId) => {},\r\n  itemIsSelectedPlayer: (playerId) => {},\r\n  updateProfileId: (playerId) => {},\r\n  updateProfileName: (name) => {},\r\n  updateProfileImgSrc: (imgSrc) => {},\r\n  updateInitialItemIndex: (initialItemIndex) => {},\r\n});\r\n\r\nexport function PlayersContextProvider(props) {\r\n  const [groupName, setGroupName] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [userSelectedPlayers, setUserSelectedPlayers] = useState([]);\r\n  const [profilePlayerScores, setProfilePlayerScores] = useState([]);\r\n  const [profileId, setProfileId] = useState(null);\r\n  const [profileName, setProfileName] = useState(null);\r\n  const [profileImgSrc, setProfileImgSrc] = useState(null);\r\n  const [initialItemIndex, setInitialItemIndex] = useState(0);\r\n\r\n  function loadGroupNameHandler(newGroupName) {\r\n    setGroupName((prevGroupName) => {\r\n      return newGroupName;\r\n    });\r\n  }\r\n\r\n  function getApiURL() {\r\n    return API_URL; // + \"/\" + groupName;\r\n  }\r\n\r\n  function loadPlayersHandler(players) {\r\n    if (profileId === null && localStorage.getItem(\"PlayerId\") !== null) {\r\n      setProfileId((prevProfileId) => {\r\n        return localStorage.getItem(\"PlayerId\");\r\n      });\r\n    }\r\n\r\n    setPlayers((prevPlayers) => {\r\n      return players;\r\n    });\r\n  }\r\n\r\n  function loadProfilePlayerScoresHandler(playerScores) {\r\n    setProfilePlayerScores((prevPlayerScores) => {\r\n      return playerScores;\r\n    });\r\n  }\r\n\r\n  function updatePlayerHandler(player) {\r\n    setPlayers((prevPlayers) => {\r\n      //add update player data logic\r\n      return prevPlayers;\r\n    });\r\n  }\r\n\r\n  function updateProfilePlayerScoreHandler(playerId, type, value) {\r\n    setProfilePlayerScores((prevPlayerScores) => {\r\n      if (prevPlayerScores == null) {\r\n        prevPlayerScores = [];\r\n      }\r\n\r\n      let currentScore = prevPlayerScores.find((s) => s.playerId === playerId);\r\n      prevPlayerScores = prevPlayerScores.filter(\r\n        (s) => s.playerId !== playerId\r\n      );\r\n\r\n      if (currentScore === undefined) {\r\n        currentScore = {\r\n          attack: 0,\r\n          defense: 0,\r\n          stamina: 0,\r\n          playerId: playerId,\r\n        };\r\n      }\r\n\r\n      switch (type) {\r\n        case \"attack\":\r\n          currentScore.attack = value;\r\n          break;\r\n        case \"defense\":\r\n          currentScore.defense = value;\r\n          break;\r\n        case \"stamina\":\r\n          currentScore.stamina = value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      prevPlayerScores.push(currentScore);\r\n      return prevPlayerScores;\r\n    });\r\n  }\r\n\r\n  function addSelectedPlayerHandler(selectedPlayer) {\r\n    setUserSelectedPlayers((prevUserSelectedPlayers) => {\r\n      return prevUserSelectedPlayers.concat(selectedPlayer);\r\n    });\r\n  }\r\n\r\n  function removeSelectedPlayerHandler(playerId) {\r\n    setUserSelectedPlayers((prevUserSelectedPlayers) => {\r\n      return prevUserSelectedPlayers.filter((player) => player.id !== playerId);\r\n    });\r\n  }\r\n\r\n  function itemIsSelectedPlayerHandler(playerId) {\r\n    return userSelectedPlayers.some((player) => player.id === playerId);\r\n  }\r\n\r\n  function updateProfileIdHandler(playerid) {\r\n    return setProfileId((prevProfileId) => {\r\n      return playerid;\r\n    });\r\n  }\r\n\r\n  function updateProfileNameHandler(name) {\r\n    return setProfileName((prevProfileName) => {\r\n      return name;\r\n    });\r\n  }\r\n\r\n  function updateProfileImgSrcHandler(imgSrc) {\r\n    return setProfileImgSrc((prevProfileImgSrc) => {\r\n      return imgSrc;\r\n    });\r\n  }\r\n\r\n  function updateInitialItemIndexHandler(initialItemIndex) {\r\n    return setInitialItemIndex((prevInitialItemIndex) => {\r\n      return initialItemIndex;\r\n    });\r\n  }\r\n\r\n  const context = {\r\n    groupName: groupName,\r\n    players: players,\r\n    profileId: profileId,\r\n    profileName: profileName,\r\n    profileImgSrc: profileImgSrc,\r\n    initialItemIndex: initialItemIndex,\r\n    selectedPlayers: userSelectedPlayers,\r\n    profilePlayerScores: profilePlayerScores,\r\n    totalSelectedPlayers: userSelectedPlayers.length,\r\n    loadGroupName: loadGroupNameHandler,\r\n    loadPlayers: loadPlayersHandler,\r\n    updatePlayer: updatePlayerHandler,\r\n    addSelectedPlayer: addSelectedPlayerHandler,\r\n    removeSelectedPlayer: removeSelectedPlayerHandler,\r\n    itemIsSelectedPlayer: itemIsSelectedPlayerHandler,\r\n    loadProfilePlayerScores: loadProfilePlayerScoresHandler,\r\n    updateProfilePlayerScore: updateProfilePlayerScoreHandler,\r\n    updateProfileId: updateProfileIdHandler,\r\n    updateProfileName: updateProfileNameHandler,\r\n    updateProfileImgSrc: updateProfileImgSrcHandler,\r\n    updateInitialItemIndex: updateInitialItemIndexHandler,\r\n  };\r\n\r\n  return (\r\n    <PlayersContext.Provider value={context}>\r\n      {props.children}\r\n    </PlayersContext.Provider>\r\n  );\r\n}\r\n\r\nexport default PlayersContext;\r\n","import MainNavigation from \"./MainNavigation\";\r\n\r\nimport classes from \"./Layout.module.css\";\r\nimport {\r\n  AppShell,\r\n  Avatar,\r\n  Burger,\r\n  Group,\r\n  Header,\r\n  MediaQuery,\r\n  Navbar,\r\n  Text,\r\n  //Title,\r\n  useMantineTheme,\r\n} from \"@mantine/core\";\r\n\r\nimport { useContext, useState } from \"react\";\r\nimport PlayersContext from \"../../store/player-context\";\r\n\r\nconst Layout = (props) => {\r\n  const profileName = useContext(PlayersContext).profileName;\r\n  const profileImgSrc = useContext(PlayersContext).profileImgSrc;\r\n  const [opened, setOpened] = useState(false);\r\n  const theme = useMantineTheme();\r\n\r\n  const onMenuChangedHandler = () => {\r\n    setOpened(false);\r\n  };\r\n\r\n  return (\r\n    <AppShell\r\n      padding=\"md\"\r\n      header={\r\n        <Header height={70} padding=\"md\" style={{ backgroundColor: \"#e7e7e7\" }}>\r\n          {/* Handle other responsive styles with MediaQuery component or createStyles function */}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <MediaQuery largerThan=\"sm\" styles={{ display: \"none\" }}>\r\n              <Burger\r\n                opened={opened}\r\n                onClick={() => setOpened((o) => !o)}\r\n                size=\"sm\"\r\n                color={theme.colors.gray[6]}\r\n                mr=\"xl\"\r\n              />\r\n            </MediaQuery>\r\n\r\n            {profileName != null && (\r\n              <Group noWrap style={{ height: \"25px\", float: \"right\" }}>\r\n                <Avatar src={profileImgSrc} radius=\"xl\" size=\"lg\" />\r\n                <div style={{ flex: 1 }}>\r\n                  <Text size=\"sm\" weight={500}>\r\n                    {profileName}\r\n                  </Text>\r\n                </div>\r\n              </Group>\r\n            )}\r\n\r\n            {/* <Title order={3} style={{ color: \"#777\" }}>\r\n              Balanced Team Generator\r\n            </Title> */}\r\n          </div>\r\n        </Header>\r\n      }\r\n      navbar={\r\n        <Navbar\r\n          padding=\"md\"\r\n          // Breakpoint at which navbar will be hidden if hidden prop is true\r\n          hiddenBreakpoint=\"sm\"\r\n          // Hides navbar when viewport size is less than value specified in hiddenBreakpoint\r\n          hidden={!opened}\r\n          // when viewport size is less than theme.breakpoints.sm navbar width is 100%\r\n          // viewport size > theme.breakpoints.sm – width is 300px\r\n          // viewport size > theme.breakpoints.lg – width is 400px\r\n          width={{ sm: 300, lg: 400 }}\r\n        >\r\n          <MainNavigation pageChanged={onMenuChangedHandler} />\r\n        </Navbar>\r\n      }\r\n      styles={(theme) => ({\r\n        main: {\r\n          backgroundColor:\r\n            theme.colorScheme === \"dark\"\r\n              ? theme.colors.dark[8]\r\n              : theme.colors.gray[0],\r\n        },\r\n      })}\r\n    >\r\n      <main className={classes.main}>{props.children}</main>\r\n    </AppShell>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","export const getPlayerScore = (playerScores, scoredPlayerId, type) => {\r\n  if (playerScores != null) {\r\n    const playerScoreObj = playerScores.find(\r\n      (s) => s.playerId === scoredPlayerId\r\n    );\r\n    if (playerScoreObj !== undefined) {\r\n      switch (type) {\r\n        case \"attack\":\r\n          return playerScoreObj.attack <= 10\r\n            ? playerScoreObj.attack * 10\r\n            : playerScoreObj.attack;\r\n        case \"defense\":\r\n          return playerScoreObj.defense <= 10\r\n            ? playerScoreObj.defense * 10\r\n            : playerScoreObj.defense;\r\n        case \"stamina\":\r\n          if (playerScoreObj.stamina !== undefined)\r\n            return playerScoreObj.stamina;\r\n          else if (playerScoreObj.construction !== undefined)\r\n            return Math.ceil(\r\n              ((parseInt(playerScoreObj.construction) +\r\n                parseInt(playerScoreObj.resistence) +\r\n                parseInt(playerScoreObj.technique)) *\r\n                10) /\r\n                3\r\n            );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  return 0;\r\n};\r\n\r\nfunction getCombinationItem(allPlayers, combPlayers, r) {\r\n  const teamA = combPlayers;\r\n  const teamAIds = teamA.map((player) => {\r\n    return player.id;\r\n  });\r\n  const teamB = allPlayers.filter((p) => teamAIds.indexOf(p.id) < 0);\r\n\r\n  return {\r\n    teamAIds: teamAIds,\r\n    attackA: teamA.reduce(function (previousValue, currentValue) {\r\n      return previousValue + currentValue.attack;\r\n    }, 0),\r\n    defenseA: teamA.reduce(function (previousValue, currentValue) {\r\n      return previousValue + currentValue.defense;\r\n    }, 0),\r\n    staminaA: teamA.reduce(function (previousValue, currentValue) {\r\n      return previousValue + currentValue.stamina;\r\n    }, 0),\r\n\r\n    teamBIds: teamB.map((player) => {\r\n      return player.id;\r\n    }),\r\n    attackB: teamB.reduce(function (previousValue, currentValue) {\r\n      return previousValue + currentValue.attack;\r\n    }, 0),\r\n    defenseB: teamB.reduce(function (previousValue, currentValue) {\r\n      return previousValue + currentValue.defense;\r\n    }, 0),\r\n    staminaB: teamB.reduce(function (previousValue, currentValue) {\r\n      return previousValue + currentValue.stamina;\r\n    }, 0),\r\n  };\r\n}\r\n\r\n// Javascript program to print all\r\n// combination of size r in an array of size n\r\n\r\n/* arr[] ---> Input Array\r\n\tdata[] ---> Temporary array to store current combination\r\n\tstart & end ---> Starting and Ending indexes in arr[]\r\n\tindex ---> Current index in data[]\r\n\tr ---> Size of a combination to be printed */\r\nfunction combinationUtil(arr, data, start, end, index, r, combinations) {\r\n  // Current combination is ready to be printed, print it\r\n  if (index === r) {\r\n    combinations.push(getCombinationItem(arr, data.slice(0, r), r));\r\n  }\r\n\r\n  // replace index with all possible elements. The condition\r\n  // \"end-i+1 >= r-index\" makes sure that including one element\r\n  // at index will make a combination with remaining elements\r\n  // at remaining positions\r\n  for (let i = start; i <= end && end - i + 1 >= r - index; i++) {\r\n    data[index] = arr[i];\r\n    combinationUtil(arr, data, i + 1, end, index + 1, r, combinations);\r\n  }\r\n}\r\n\r\n// The main function that prints all combinations of size r\r\n// in arr[] of size n. This function mainly uses combinationUtil()\r\nexport function getCombinations(arr, n, r, combinations) {\r\n  // A temporary array to store all combination one by one\r\n  let data = new Array(r);\r\n\r\n  // Print all combination using temporary array 'data[]'\r\n  combinationUtil(arr, data, 0, n - 1, 0, r, combinations);\r\n}\r\n","import { useContext } from \"react\";\r\nimport PlayersContext from \"../../store/player-context\";\r\nimport { Checkbox, Group, Avatar, Text, Card } from \"@mantine/core\";\r\nimport classes from \"./PlayerItem.module.css\";\r\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\r\n\r\nconst PlayerItem = (props) => {\r\n  const playersCxt = useContext(PlayersContext);\r\n\r\n  const playerIsSelected = playersCxt.itemIsSelectedPlayer(props.id);\r\n  const attack = props.attack;\r\n  const defense = props.defense;\r\n  const stamina = props.stamina;\r\n\r\n  function toggleSelectedPlayerHandler() {\r\n    if (playerIsSelected) {\r\n      playersCxt.removeSelectedPlayer(props.id);\r\n    } else {\r\n      playersCxt.addSelectedPlayer({\r\n        id: props.id,\r\n        name: props.name,\r\n        imgSrc: props.imgSrc,\r\n        attack: attack,\r\n        defense: defense,\r\n        stamina: stamina,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={\r\n        playerIsSelected\r\n          ? props.activeClass === \"teama\"\r\n            ? classes.teama\r\n            : props.activeClass === \"teamb\"\r\n            ? classes.teamb\r\n            : classes.info\r\n          : classes.light\r\n      }\r\n      onClick={toggleSelectedPlayerHandler}\r\n    >\r\n      <Card\r\n        shadow=\"sm\"\r\n        bg={playerIsSelected ? props.activeClass : \"light\"}\r\n        text={playerIsSelected ? props.activeClass : \"light\"}\r\n        style={{ width: \"100%\", marginBottom: \"10px\", cursor: \"pointer\" }}\r\n        className=\"mb-1\"\r\n        padding=\"sm\"\r\n      >\r\n        <Group\r\n          noWrap\r\n          style={{ height: \"25px\", gap: \"0px\", marginLeft: \"-10px\" }}\r\n        >\r\n          <Avatar src={props.imgSrc} radius=\"xl\" size=\"lg\" />\r\n          <div style={{ flex: 1, width: \"100%\" }}>\r\n            <Text size=\"sm\" weight={500} style={{ float: \"left\" }}>\r\n              {props.name}\r\n            </Text>\r\n            <div className={classes.divcircle}>\r\n              <CircularProgressbar\r\n                value={stamina}\r\n                text={`${stamina}`}\r\n                styles={buildStyles({\r\n                  pathColor: `rgba(34, 139, 230, ${stamina / 100})`,\r\n                  textColor: \"#228be6\",\r\n                  textSize: \"40px\",\r\n                })}\r\n              />\r\n            </div>\r\n            <div className={classes.divcircle}>\r\n              <CircularProgressbar\r\n                value={defense}\r\n                text={`${defense}`}\r\n                styles={buildStyles({\r\n                  pathColor: `rgba(64, 192, 87, ${defense / 100})`,\r\n                  textColor: \"#40c057\",\r\n                  textSize: \"40px\",\r\n                })}\r\n              />\r\n            </div>\r\n            <div className={classes.divcircle}>\r\n              <CircularProgressbar\r\n                value={attack}\r\n                text={`${attack}`}\r\n                styles={buildStyles({\r\n                  pathColor: `rgba(250, 82, 82, ${attack / 100})`,\r\n                  textColor: \"#fa5252\",\r\n                  textSize: \"40px\",\r\n                })}\r\n              />\r\n            </div>\r\n          </div>\r\n          {props.hideCheckbox !== true && (\r\n            <Checkbox\r\n              checked={playerIsSelected}\r\n              onChange={() => {}}\r\n              tabIndex={-1}\r\n              style={{ marginLeft: \"16px\" }}\r\n              // sx={{ pointerEvents: \"none\" }}\r\n            />\r\n          )}\r\n        </Group>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\nexport default PlayerItem;\r\n","import {\r\n  ActionIcon,\r\n  Badge,\r\n  Box,\r\n  Card,\r\n  Divider,\r\n  Grid,\r\n  Group,\r\n  Text,\r\n  useMantineTheme,\r\n} from \"@mantine/core\";\r\nimport { useEffect } from \"react\";\r\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\r\nimport { Fragment, useState } from \"react/cjs/react.development\";\r\nimport { getCombinations } from \"../../general/helpers\";\r\nimport {\r\n  BsFillArrowLeftCircleFill,\r\n  BsFillArrowRightCircleFill,\r\n} from \"react-icons/bs\";\r\n\r\nimport PlayerItem from \"./PlayerItem\";\r\nimport classes from \"./PlayerList.module.css\";\r\n\r\nconst PlayerList = (props) => {\r\n  const theme = useMantineTheme();\r\n  const [matchNumber, setMatchNumber] = useState(1);\r\n  const [bestMatchups, setBestMatchups] = useState([]);\r\n\r\n  const allPlayers = props.players;\r\n\r\n  useEffect(() => {\r\n    let n = props.selectedPlayers.length;\r\n    let r = Math.floor(n / 2);\r\n    let teamCombinations = [];\r\n    getCombinations(props.selectedPlayers, n, r, teamCombinations);\r\n\r\n    let sortedTeamCombinations = teamCombinations.map((team) => ({\r\n      ...team,\r\n      difference: Math.abs(\r\n        team.attackA +\r\n          team.defenseA +\r\n          team.staminaA -\r\n          team.attackB -\r\n          team.defenseB -\r\n          team.staminaB\r\n      ),\r\n    }));\r\n    sortedTeamCombinations = sortedTeamCombinations\r\n      .sort((a, b) => parseFloat(a.difference) - parseFloat(b.difference))\r\n      .slice(0, 5);\r\n\r\n    setBestMatchups(sortedTeamCombinations);\r\n    setMatchNumber(1);\r\n  }, [props.selectedPlayers]);\r\n\r\n  let matchTeam = bestMatchups[matchNumber - 1];\r\n  if (matchTeam !== undefined) {\r\n    matchTeam.teamAtotalScore =\r\n      matchTeam.attackA + matchTeam.defenseA + matchTeam.staminaA;\r\n    matchTeam.teamBtotalScore =\r\n      matchTeam.attackB + matchTeam.defenseB + matchTeam.staminaB;\r\n  }\r\n\r\n  const teamA = props.selectedPlayers.filter(\r\n    (p) => matchTeam.teamAIds.indexOf(p.id) >= 0\r\n  );\r\n\r\n  const teamB = props.selectedPlayers.filter(\r\n    (p) => matchTeam.teamBIds.indexOf(p.id) >= 0\r\n  );\r\n\r\n  if (bestMatchups.length >= matchNumber) {\r\n    teamA.attack = Math.floor(\r\n      bestMatchups[matchNumber - 1].attackA /\r\n        bestMatchups[matchNumber - 1].teamAIds.length\r\n    );\r\n    teamA.defense = Math.floor(\r\n      bestMatchups[matchNumber - 1].defenseA /\r\n        bestMatchups[matchNumber - 1].teamAIds.length\r\n    );\r\n    teamA.stamina = Math.floor(\r\n      bestMatchups[matchNumber - 1].staminaA /\r\n        bestMatchups[matchNumber - 1].teamAIds.length\r\n    );\r\n\r\n    teamB.attack = Math.floor(\r\n      bestMatchups[matchNumber - 1].attackB /\r\n        bestMatchups[matchNumber - 1].teamBIds.length\r\n    );\r\n    teamB.defense = Math.floor(\r\n      bestMatchups[matchNumber - 1].defenseB /\r\n        bestMatchups[matchNumber - 1].teamBIds.length\r\n    );\r\n    teamB.stamina = Math.floor(\r\n      bestMatchups[matchNumber - 1].staminaB /\r\n        bestMatchups[matchNumber - 1].teamBIds.length\r\n    );\r\n  }\r\n\r\n  const onNextHandler = () => {\r\n    setMatchNumber(matchNumber + 1);\r\n  };\r\n\r\n  const onPrevHandler = () => {\r\n    setMatchNumber(matchNumber - 1);\r\n  };\r\n\r\n  const getMatchPercentage = () => {\r\n    return (\r\n      matchTeam.teamAtotalScore < matchTeam.teamBtotalScore\r\n        ? (matchTeam.teamAtotalScore / matchTeam.teamBtotalScore) * 100\r\n        : (matchTeam.teamBtotalScore / matchTeam.teamAtotalScore) * 100\r\n    ).toLocaleString(\"en\", {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className={classes.list}>\r\n        {allPlayers.map((player) => (\r\n          <PlayerItem\r\n            key={player.id}\r\n            id={player.id}\r\n            name={player.name}\r\n            attack={player.attack}\r\n            defense={player.defense}\r\n            stamina={player.stamina}\r\n            imgSrc={player.imgSrc}\r\n            activeClass=\"info\"\r\n          />\r\n        ))}\r\n      </ul>\r\n\r\n      {teamA.length > 1 && (\r\n        <Grid>\r\n          <Grid.Col md={12}>\r\n            <Divider\r\n              my=\"xs\"\r\n              label=\"Generated teams\"\r\n              labelPosition=\"center\"\r\n              variant=\"dashed\"\r\n            />\r\n            <Box\r\n              sx={(theme) => ({\r\n                textAlign: \"center\",\r\n                padding: \"10px 0 0 0\",\r\n                fontWeight: \"bold\",\r\n              })}\r\n            >\r\n              <ActionIcon\r\n                onClick={onPrevHandler}\r\n                disabled={matchNumber === 1}\r\n                style={{ float: \"left\", marginLeft: \"10px\" }}\r\n              >\r\n                <BsFillArrowLeftCircleFill\r\n                  size=\"40\"\r\n                  color={matchNumber === 1 ? \"#ced4da\" : \"#228be6\"}\r\n                />\r\n              </ActionIcon>\r\n              #{matchNumber} Best matchup {getMatchPercentage()}%\r\n              <ActionIcon\r\n                onClick={onNextHandler}\r\n                disabled={matchNumber >= 5}\r\n                style={{ float: \"right\", marginRight: \"10px\" }}\r\n              >\r\n                <BsFillArrowRightCircleFill\r\n                  size=\"40\"\r\n                  color={matchNumber >= 5 ? \"#ced4da\" : \"#228be6\"}\r\n                />\r\n              </ActionIcon>\r\n            </Box>\r\n          </Grid.Col>\r\n          <Grid.Col md={6}>\r\n            <Card shadow=\"sm\" padding=\"lg\" style={{ paddingTop: 0 }}>\r\n              <Group\r\n                position=\"apart\"\r\n                style={{ marginBottom: 5, marginTop: theme.spacing.sm }}\r\n              >\r\n                <div style={{ width: \"100%\" }}>\r\n                  <Badge\r\n                    variant=\"filled\"\r\n                    style={{\r\n                      backgroundColor: \"#bfefe1\",\r\n                      padding: \"18px 6px 18px 7px\",\r\n                      float: \"right\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      size=\"md\"\r\n                      weight={700}\r\n                      style={{ float: \"left\" }}\r\n                      color=\"black\"\r\n                      styles={{ textTransform: \"none !important\" }}\r\n                    >\r\n                      Team A <small>({matchTeam.teamAtotalScore})</small>\r\n                    </Text>\r\n                    <div className={classes.divcircle}>\r\n                      <CircularProgressbar\r\n                        value={teamA.stamina}\r\n                        text={`${teamA.stamina}`}\r\n                        styles={buildStyles({\r\n                          pathColor: `rgba(34, 139, 230, ${\r\n                            teamA.stamina / 100\r\n                          })`,\r\n                          textColor: \"#228be6\",\r\n                          textSize: \"40px\",\r\n                        })}\r\n                      />\r\n                    </div>\r\n                    <div className={classes.divcircle}>\r\n                      <CircularProgressbar\r\n                        value={teamA.defense}\r\n                        text={`${teamA.defense}`}\r\n                        styles={buildStyles({\r\n                          pathColor: `rgba(64, 192, 87, ${\r\n                            teamA.defense / 100\r\n                          })`,\r\n                          textColor: \"#40c057\",\r\n                          textSize: \"40px\",\r\n                        })}\r\n                      />\r\n                    </div>\r\n                    <div className={classes.divcircle}>\r\n                      <CircularProgressbar\r\n                        value={teamA.attack}\r\n                        text={`${teamA.attack}`}\r\n                        styles={buildStyles({\r\n                          pathColor: `rgba(250, 82, 82, ${teamA.attack / 100})`,\r\n                          textColor: \"#fa5252\",\r\n                          textSize: \"40px\",\r\n                        })}\r\n                      />\r\n                    </div>\r\n                  </Badge>\r\n                </div>\r\n                <ul className={classes.list}>\r\n                  {teamA.map((player) => (\r\n                    <PlayerItem\r\n                      key={player.id}\r\n                      id={player.id}\r\n                      name={player.name}\r\n                      attack={player.attack}\r\n                      defense={player.defense}\r\n                      stamina={player.stamina}\r\n                      imgSrc={player.imgSrc}\r\n                      hideCheckbox={true}\r\n                      activeClass=\"teama\"\r\n                    />\r\n                  ))}\r\n                </ul>\r\n              </Group>\r\n            </Card>\r\n          </Grid.Col>\r\n          <Grid.Col md={6}>\r\n            <Card shadow=\"sm\" padding=\"lg\" style={{ paddingTop: 0 }}>\r\n              <Group\r\n                position=\"apart\"\r\n                style={{ marginBottom: 5, marginTop: theme.spacing.sm }}\r\n              >\r\n                <Badge\r\n                  color=\"yellow\"\r\n                  variant=\"filled\"\r\n                  size=\"lg\"\r\n                  style={{\r\n                    backgroundColor: \"#f7e5b0\",\r\n                    padding: \"18px 6px 18px 7px\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    size=\"md\"\r\n                    weight={700}\r\n                    style={{ float: \"left\" }}\r\n                    color=\"black\"\r\n                  >\r\n                    Team B <small>({matchTeam.teamBtotalScore})</small>\r\n                  </Text>\r\n                  <div className={classes.divcircle}>\r\n                    <CircularProgressbar\r\n                      value={teamB.stamina}\r\n                      text={`${teamB.stamina}`}\r\n                      styles={buildStyles({\r\n                        pathColor: `rgba(34, 139, 230, ${teamB.stamina / 100})`,\r\n                        textColor: \"#228be6\",\r\n                        textSize: \"40px\",\r\n                      })}\r\n                    />\r\n                  </div>\r\n                  <div className={classes.divcircle}>\r\n                    <CircularProgressbar\r\n                      value={teamB.defense}\r\n                      text={`${teamB.defense}`}\r\n                      styles={buildStyles({\r\n                        pathColor: `rgba(64, 192, 87, ${teamB.defense / 100})`,\r\n                        textColor: \"#40c057\",\r\n                        textSize: \"40px\",\r\n                      })}\r\n                    />\r\n                  </div>\r\n                  <div className={classes.divcircle}>\r\n                    <CircularProgressbar\r\n                      value={teamB.attack}\r\n                      text={`${teamB.attack}`}\r\n                      styles={buildStyles({\r\n                        pathColor: `rgba(250, 82, 82, ${teamB.attack / 100})`,\r\n                        textColor: \"#fa5252\",\r\n                        textSize: \"40px\",\r\n                      })}\r\n                    />\r\n                  </div>\r\n                </Badge>\r\n\r\n                <ul className={classes.list}>\r\n                  {teamB.map((player) => (\r\n                    <PlayerItem\r\n                      key={player.id}\r\n                      id={player.id}\r\n                      name={player.name}\r\n                      attack={player.attack}\r\n                      defense={player.defense}\r\n                      stamina={player.stamina}\r\n                      imgSrc={player.imgSrc}\r\n                      hideCheckbox={true}\r\n                      activeClass=\"teamb\"\r\n                    />\r\n                  ))}\r\n                </ul>\r\n              </Group>\r\n            </Card>\r\n          </Grid.Col>\r\n        </Grid>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PlayerList;\r\n","import { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport PlayerList from \"../components/players/PlayerList\";\r\nimport PlayersContext from \"../store/player-context\";\r\nimport { getPlayerScore } from \"../general/helpers\";\r\n\r\n//const players = require(\"../components/players.json\");\r\n\r\nfunction PlayersPage() {\r\n  const playersCtx = useContext(PlayersContext);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchPlayersHandler = useCallback(async () => {\r\n    console.log(\"fetching data...\");\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(playersCtx.getApiUrl());\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      const playersData = [];\r\n      for (const key in data) {\r\n        const playedData = {\r\n          id: key,\r\n          ...data[key],\r\n        };\r\n        playersData.push(playedData);\r\n      }\r\n\r\n      //calculate player scores\r\n      for (const player of playersData) {\r\n        for (const type of [\"attack\", \"defense\", \"stamina\"]) {\r\n          let initialValue = 0;\r\n          let sum = playersData.reduce(function (previousValue, currentValue) {\r\n            return (\r\n              previousValue +\r\n              getPlayerScore(currentValue.playerScores, player.id, type)\r\n            );\r\n          }, initialValue);\r\n          let count = playersData.reduce(function (\r\n            previousValue,\r\n            currentValue\r\n          ) {\r\n            return (\r\n              previousValue +\r\n              (getPlayerScore(currentValue.playerScores, player.id, type) > 0\r\n                ? 1\r\n                : 0)\r\n            );\r\n          },\r\n          initialValue);\r\n          player[type] = Math.floor(sum / count);\r\n        }\r\n      }\r\n\r\n      //sort by score and load\r\n      playersCtx.loadPlayers(\r\n        playersData.sort(\r\n          (b, a) =>\r\n            a.attack + a.defense + a.stamina - b.attack - b.defense - b.stamina\r\n        )\r\n      );\r\n\r\n      if (localStorage.getItem(\"PlayerId\") !== null) {\r\n        const currentPlayer = playersData.find(\r\n          (p) => p.id === localStorage.getItem(\"PlayerId\")\r\n        );\r\n        playersCtx.loadProfilePlayerScores(currentPlayer.playerScores);\r\n        playersCtx.updateProfileName(currentPlayer.name);\r\n        playersCtx.updateProfileImgSrc(currentPlayer.imgSrc);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (playersCtx.players.length === 0) {\r\n      fetchPlayersHandler();\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchPlayersHandler, playersCtx.players.length]);\r\n\r\n  if (isLoading) {\r\n    return <section>Loading...</section>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <PlayerList\r\n        players={playersCtx.players}\r\n        selectedPlayers={playersCtx.selectedPlayers}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PlayersPage;\r\n","import classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import { Button, TextInput } from \"@mantine/core\";\r\nimport { Fragment, useRef, useState } from \"react\";\r\nimport Card from \"../ui/Card\";\r\nimport classes from \"./NewPlayerForm.module.css\";\r\nimport { AiOutlineUserAdd } from \"react-icons/ai\";\r\n\r\nconst NewPlayerForm = (props) => {\r\n  const [addingPlayer, setAddingPlayer] = useState(false);\r\n\r\n  const nameInputRef = useRef();\r\n\r\n  const addNewPlayerHandler = (event) => {\r\n    setAddingPlayer(true);\r\n  };\r\n\r\n  const cancelHandler = (event) => {\r\n    setAddingPlayer(false);\r\n    nameInputRef.current.value = \"\";\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n\r\n    props.onAddPlayer(enteredName);\r\n\r\n    setAddingPlayer(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {!addingPlayer && (\r\n        <Button\r\n          leftIcon={<AiOutlineUserAdd />}\r\n          onClick={addNewPlayerHandler}\r\n          style={{ margin: \"20px\" }}\r\n        >\r\n          Add New Player\r\n        </Button>\r\n      )}\r\n\r\n      {addingPlayer && (\r\n        <Card>\r\n          <form className={classes.form} onSubmit={submitHandler}>\r\n            <TextInput\r\n              required\r\n              label=\"Name\"\r\n              placeholder=\"Player name\"\r\n              ref={nameInputRef}\r\n            />\r\n\r\n            {/* <div className={classes.control}>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input type=\"text\" required id=\"name\" ref={nameInputRef} />\r\n            </div> */}\r\n            <div className={classes.actions}>\r\n              <Button type=\"button\" color=\"gray\" onClick={cancelHandler}>\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\" color=\"indigo\" ml={10}>\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlayerForm;\r\n","import {\r\n  Group,\r\n  Avatar,\r\n  Text,\r\n  Accordion,\r\n  Slider,\r\n  CheckboxIcon,\r\n  Button,\r\n} from \"@mantine/core\";\r\nimport { useNotifications } from \"@mantine/notifications\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport { API_URL } from \"../../config\";\r\nimport { getPlayerScore } from \"../../general/helpers\";\r\nimport PlayersContext from \"../../store/player-context\";\r\n\r\nimport classes from \"./PlayerList.module.css\";\r\n\r\nconst AccordionLabel = ({ label, image, attack, defense, stamina }) => {\r\n  return (\r\n    <Group noWrap>\r\n      <Avatar src={image} radius=\"xl\" size=\"lg\" />\r\n      <div style={{ width: \"100%\" }}>\r\n        <Text style={{ float: \"left\" }}>{label}</Text>\r\n        <div className={classes.divcircle}>\r\n          <CircularProgressbar\r\n            value={stamina}\r\n            text={`${stamina}`}\r\n            styles={buildStyles({\r\n              pathColor: `rgba(34, 139, 230, ${stamina / 100})`,\r\n              textColor: \"#228be6\",\r\n              textSize: \"40px\",\r\n            })}\r\n          />\r\n        </div>\r\n        <div className={classes.divcircle}>\r\n          <CircularProgressbar\r\n            value={defense}\r\n            text={`${defense}`}\r\n            styles={buildStyles({\r\n              pathColor: `rgba(64, 192, 87, ${defense / 100})`,\r\n              textColor: \"#40c057\",\r\n              textSize: \"40px\",\r\n            })}\r\n          />\r\n        </div>\r\n        <div className={classes.divcircle}>\r\n          <CircularProgressbar\r\n            value={attack}\r\n            text={`${attack}`}\r\n            styles={buildStyles({\r\n              pathColor: `rgba(250, 82, 82, ${attack / 100})`,\r\n              textColor: \"#fa5252\",\r\n              textSize: \"40px\",\r\n            })}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Group>\r\n  );\r\n};\r\n\r\nconst PlayerList = () => {\r\n  const playersCtx = useContext(PlayersContext);\r\n  const notifications = useNotifications();\r\n\r\n  const profileId = playersCtx.profileId;\r\n  const players = playersCtx.players;\r\n  const profilePlayerScores = playersCtx.profilePlayerScores;\r\n  const initialItemIndex = playersCtx.initialItemIndex;\r\n\r\n  const [accItemScoresUpdated, setAccItemScoresUpdated] = useState(false);\r\n\r\n  //this shuld not run\r\n  if (\r\n    (playersCtx.profilePlayerScores === undefined ||\r\n      playersCtx.profilePlayerScores.length === 0) &&\r\n    playersCtx.players.find((p) => p.id === profileId).playerScores != null\r\n  ) {\r\n    playersCtx.loadProfilePlayerScores(\r\n      playersCtx.players.find((p) => p.id === profileId).playerScores\r\n    );\r\n  }\r\n\r\n  const saveClickHandler = () => {\r\n    saveScore();\r\n  };\r\n\r\n  const onAccordionChanged = (state) => {\r\n    for (let i = 0; i < players.length; i++) {\r\n      if (state[i] === true) {\r\n        playersCtx.updateInitialItemIndex(i);\r\n        break;\r\n      }\r\n    }\r\n\r\n    //save to database\r\n    if (accItemScoresUpdated) {\r\n      saveScore();\r\n    }\r\n  };\r\n\r\n  const saveScore = () => {\r\n    fetch(\r\n      API_URL.replace(\".json\", \"\") + \"/\" + profileId + \"/playerScores.json\",\r\n      {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(profilePlayerScores),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    ).then(() => {\r\n      notifications.showNotification({\r\n        title: \"Scores update\",\r\n        message: \"Data was saved\",\r\n        color: \"teal\",\r\n        icon: <CheckboxIcon />,\r\n        autoClose: 2000,\r\n      });\r\n      setAccItemScoresUpdated(false);\r\n    });\r\n  };\r\n\r\n  const updateScoreItem = (playerId, type, value) => {\r\n    setAccItemScoresUpdated(true);\r\n    playersCtx.updateProfilePlayerScore(playerId, type, value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Accordion\r\n        initialItem={initialItemIndex}\r\n        iconPosition=\"right\"\r\n        onChange={onAccordionChanged}\r\n      >\r\n        {players\r\n          .filter((p) => p.id !== profileId)\r\n          .map((player) => (\r\n            <Accordion.Item\r\n              key={player.id}\r\n              label={\r\n                <AccordionLabel\r\n                  image={player.imgSrc}\r\n                  attack={getPlayerScore(\r\n                    profilePlayerScores,\r\n                    player.id,\r\n                    \"attack\"\r\n                  )}\r\n                  defense={getPlayerScore(\r\n                    profilePlayerScores,\r\n                    player.id,\r\n                    \"defense\"\r\n                  )}\r\n                  stamina={getPlayerScore(\r\n                    profilePlayerScores,\r\n                    player.id,\r\n                    \"stamina\"\r\n                  )}\r\n                  label={player.name}\r\n                />\r\n              }\r\n              onToggle\r\n            >\r\n              <Text>Atac</Text>\r\n              <Slider\r\n                color=\"red\"\r\n                min={11}\r\n                defaultValue={getPlayerScore(\r\n                  profilePlayerScores,\r\n                  player.id,\r\n                  \"attack\"\r\n                )}\r\n                onChange={(value) =>\r\n                  updateScoreItem(player.id, \"attack\", value)\r\n                }\r\n              />\r\n              <Text>Defense</Text>\r\n              <Slider\r\n                color=\"green\"\r\n                min={11}\r\n                defaultValue={getPlayerScore(\r\n                  profilePlayerScores,\r\n                  player.id,\r\n                  \"defense\"\r\n                )}\r\n                onChange={(value) =>\r\n                  updateScoreItem(player.id, \"defense\", value)\r\n                }\r\n              />\r\n              <Text>Stamina</Text>\r\n              <Slider\r\n                min={11}\r\n                defaultValue={getPlayerScore(\r\n                  profilePlayerScores,\r\n                  player.id,\r\n                  \"stamina\"\r\n                )}\r\n                onChange={(value) =>\r\n                  updateScoreItem(player.id, \"stamina\", value)\r\n                }\r\n              />\r\n            </Accordion.Item>\r\n          ))}\r\n      </Accordion>\r\n      {accItemScoresUpdated && (\r\n        <div className={classes.actions}>\r\n          <Button\r\n            type=\"button\"\r\n            color=\"indigo\"\r\n            ml={10}\r\n            onClick={saveClickHandler}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PlayerList;\r\n","import { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Fragment } from \"react/cjs/react.development\";\r\nimport NewPlayerForm from \"../components/playersmanage/NewPlayerForm\";\r\nimport PlayerList from \"../components/playersmanage/PlayerList\";\r\nimport { API_URL } from \"../config\";\r\nimport PlayersContext from \"../store/player-context\";\r\n\r\nfunction PlayersManagePage() {\r\n  const playersCtx = useContext(PlayersContext);\r\n\r\n  const profileId = playersCtx.profileId;\r\n\r\n  const history = useHistory();\r\n  if (playersCtx.players === null || playersCtx.players.length === 0) {\r\n    history.replace(\"/\");\r\n  }\r\n  if (profileId === 0 || profileId === null) {\r\n    history.replace(\"/profile\");\r\n  }\r\n\r\n  const addPlayerHandler = (playerName) => {\r\n    const playerData = {\r\n      id: Math.max.apply(\r\n        Math,\r\n        playersCtx.players.map(function (o) {\r\n          return o.y;\r\n        })\r\n      ),\r\n      name: playerName,\r\n    };\r\n\r\n    let playersData = [...playersCtx.players];\r\n    playersData.push(playerData);\r\n\r\n    playersCtx.loadPlayers(playersData);\r\n\r\n    fetch(API_URL, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(playerData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(() => {\r\n      console.log(\"submitted...\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2>Manage players</h2>\r\n      {profileId !== null && <PlayerList />}\r\n      <NewPlayerForm onAddPlayer={addPlayerHandler} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PlayersManagePage;\r\n","import { ActionIcon, Avatar } from \"@mantine/core\";\r\n\r\nimport classes from \"./ProfileIcon.module.css\";\r\n\r\nconst ProfileIcon = (props) => {\r\n  const onClickHandler = () => {\r\n    return props.onAvatarClicked(props.imgSrc);\r\n  };\r\n\r\n  return (\r\n    <ActionIcon onClick={onClickHandler} className={classes.actionicon}>\r\n      <Avatar\r\n        src={props.imgSrc}\r\n        radius=\"xl\"\r\n        size=\"lg\"\r\n        style={{\r\n          backgroundColor: props.isSelected ? \"#5481a9\" : \"transparent\",\r\n        }}\r\n      />\r\n    </ActionIcon>\r\n  );\r\n};\r\n\r\nexport default ProfileIcon;\r\n","import { Button, TextInput } from \"@mantine/core\";\r\nimport { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport PlayersContext from \"../../store/player-context\";\r\nimport Card from \"../ui/Card\";\r\nimport classes from \"./EditPlayerForm.module.css\";\r\nimport ProfileIcon from \"./ProfileIcon\";\r\n\r\nconst ICONS_LIST = [\r\n  \"https://img.icons8.com/clouds/256/000000/futurama-bender.png\",\r\n  \"https://img.icons8.com/clouds/2x/homer-simpson.png\",\r\n  \"https://img.icons8.com/clouds/256/000000/futurama-mom.png\",\r\n  \"https://img.icons8.com/clouds/2x/spongebob-squarepants.png\",\r\n  \"https://img.icons8.com/clouds/2x/mando.png\",\r\n  \"https://img.icons8.com/clouds/2x/stormtrooper.png\",\r\n  \"https://img.icons8.com/clouds/2x/kokichi.png\",\r\n  \"https://img.icons8.com/clouds/2x/Bakugou.png\",\r\n  \"https://img.icons8.com/bubbles/2x/walter-white.png\",\r\n  \"https://img.icons8.com/clouds/2x/super-mario.png\",\r\n  \"https://img.icons8.com/clouds/2x/anonymous-mask.png\",\r\n  \"https://img.icons8.com/clouds/2x/jake.png\",\r\n  \"https://img.icons8.com/clouds/2x/nurse-female.png\",\r\n  \"https://img.icons8.com/clouds/2x/camo-cream.png\",\r\n  \"https://img.icons8.com/clouds/2x/user-female.png\",\r\n  \"https://img.icons8.com/clouds/2x/user-male.png\",\r\n  \"https://img.icons8.com/clouds/2x/winner.png\",\r\n  \"https://img.icons8.com/clouds/2x/gender-neutral-user.png\",\r\n  \"https://img.icons8.com/clouds/2x/santa.png\",\r\n  \"https://img.icons8.com/clouds/2x/champagne-bottle.png\",\r\n  \"https://img.icons8.com/clouds/2x/edvard-munch.png\",\r\n  \"https://img.icons8.com/clouds/2x/frida-kahlo.png\",\r\n  \"https://img.icons8.com/clouds/2x/fraud.png\",\r\n  \"https://img.icons8.com/clouds/2x/comedy.png\",\r\n];\r\n\r\nconst EditPlayerForm = (props) => {\r\n  const playersCxt = useContext(PlayersContext);\r\n\r\n  useEffect(() => {\r\n    const currentPlayer = playersCxt.players.find((p) => p.id === props.id);\r\n    setName(currentPlayer === undefined ? \"\" : currentPlayer.name);\r\n    setImgSrc(currentPlayer === undefined ? \"\" : currentPlayer.imgSrc);\r\n  }, [props.id]);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [imgSrc, setImgSrc] = useState(\"\");\r\n\r\n  const onAvatarClickedHandler = (value) => {\r\n    setImgSrc(value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    props.onUpdatePlayer(name, imgSrc);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <hr style={{ marginBottom: \"20px\" }} />\r\n      <Card>\r\n        <form className={classes.form} onSubmit={submitHandler}>\r\n          <TextInput\r\n            required\r\n            label=\"Name\"\r\n            placeholder=\"Player name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n\r\n          {ICONS_LIST.map((item) => (\r\n            <ProfileIcon\r\n              key={item}\r\n              imgSrc={item}\r\n              isSelected={item === imgSrc}\r\n              onAvatarClicked={onAvatarClickedHandler}\r\n            />\r\n          ))}\r\n\r\n          <div className={classes.actions}>\r\n            <Button type=\"submit\" color=\"indigo\" ml={10}>\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditPlayerForm;\r\n","import { Group, Avatar, Text, Select, CheckboxIcon } from \"@mantine/core\";\r\nimport { useNotifications } from \"@mantine/notifications\";\r\nimport { forwardRef, Fragment, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport PlayersContext from \"../../store/player-context\";\r\nimport EditPlayerForm from \"./EditPlayerForm\";\r\nimport { API_URL } from \"../../config\";\r\n\r\nconst Profile = () => {\r\n  const playersCtx = useContext(PlayersContext);\r\n  const notifications = useNotifications();\r\n\r\n  const playerId = playersCtx.profileId;\r\n\r\n  const history = useHistory();\r\n  if (playersCtx.players === null || playersCtx.players.length === 0)\r\n    history.replace(\"/\");\r\n\r\n  const selectData = playersCtx.players.map((player) => {\r\n    return {\r\n      id: player.id,\r\n      image: player.imgSrc,\r\n      label: player.name,\r\n      value: player.id,\r\n    };\r\n  });\r\n\r\n  const SelectItem = forwardRef(({ id, image, label, ...others }, ref) => (\r\n    <div ref={ref} {...others}>\r\n      <Group noWrap>\r\n        <Avatar src={image} />\r\n\r\n        <div>\r\n          <Text>{label}</Text>\r\n        </div>\r\n      </Group>\r\n    </div>\r\n  ));\r\n\r\n  const onProfileIdChanged = (value) => {\r\n    if (value !== null) {\r\n      playersCtx.updateProfileId(value);\r\n      localStorage.setItem(\"PlayerId\", value);\r\n\r\n      const currentPlayer = playersCtx.players.find((x) => x.id === value);\r\n      playersCtx.updateProfileName(currentPlayer.name);\r\n      playersCtx.updateProfileImgSrc(currentPlayer.imgSrc);\r\n\r\n      //save prev scores to context:players\r\n      const updatedPlayer = {\r\n        ...currentPlayer,\r\n        playerScores: playersCtx.playerScores,\r\n      };\r\n      const allPlayersUpdated = [\r\n        ...playersCtx.players.filter((p) => p.id !== value),\r\n        updatedPlayer,\r\n      ];\r\n      playersCtx.loadPlayers(allPlayersUpdated);\r\n\r\n      //load new scores\r\n      playersCtx.loadProfilePlayerScores(\r\n        playersCtx.players.find((p) => p.id === value).playerScores\r\n      );\r\n    }\r\n  };\r\n\r\n  const onProfileChanged = (newName, imgSrc) => {\r\n    const currentPlayer = playersCtx.players.find((x) => x.id === playerId);\r\n    const updatedPlayer = { ...currentPlayer, name: newName, imgSrc: imgSrc };\r\n\r\n    playersCtx.updateProfileName(updatedPlayer.name);\r\n    playersCtx.updateProfileImgSrc(updatedPlayer.imgSrc);\r\n\r\n    fetch(API_URL.replace(\".json\", \"\") + \"/\" + updatedPlayer.id + \".json\", {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(updatedPlayer),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(() => {\r\n      const allPlayersUpdated = [\r\n        ...playersCtx.players.filter((p) => p.id !== playerId),\r\n        updatedPlayer,\r\n      ];\r\n\r\n      playersCtx.loadPlayers(allPlayersUpdated);\r\n\r\n      notifications.showNotification({\r\n        title: \"Profile update\",\r\n        message: \"Data was saved\",\r\n        color: \"teal\",\r\n        icon: <CheckboxIcon />,\r\n        autoClose: 2000,\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Select\r\n        label=\"Choose profile\"\r\n        placeholder=\"Identify yourself\"\r\n        itemComponent={SelectItem}\r\n        data={selectData}\r\n        value={playerId}\r\n        //searchable\r\n        maxDropdownHeight={400}\r\n        nothingFound=\"Nobody here\"\r\n        // filter={(value, item) =>\r\n        //   item.label.toLowerCase().includes(value.toLowerCase().trim())\r\n        // }\r\n        onChange={onProfileIdChanged}\r\n        //clearable\r\n      />\r\n\r\n      {playerId !== null && (\r\n        <EditPlayerForm id={playerId} onUpdatePlayer={onProfileChanged} />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import Profile from \"../components/profile/Profile\";\r\n\r\nconst ProfilePage = () => {\r\n  return <Profile />;\r\n};\r\n\r\nexport default ProfilePage;\r\n","import { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\n\nimport PlayersPage from \"./pages/Players\";\nimport PlayersManagePage from \"./pages/PlayersManage\";\nimport ProfilePage from \"./pages/Profile\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <PlayersPage />\n        </Route>\n        <Route path=\"/manage\">\n          <PlayersManagePage />\n        </Route>\n        <Route path=\"/profile\">\n          <ProfilePage />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { PlayersContextProvider } from \"./store/player-context\";\nimport { MantineProvider } from \"@mantine/core\";\nimport { NotificationsProvider } from \"@mantine/notifications\";\n\nReactDOM.render(\n  <PlayersContextProvider>\n    <BrowserRouter>\n      <MantineProvider theme={{ colorScheme: \"light\" }}>\n        <NotificationsProvider>\n          <App />\n        </NotificationsProvider>\n      </MantineProvider>\n    </BrowserRouter>\n  </PlayersContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}