{"version":3,"sources":["components/players/PlayerList.module.css","components/players/PlayerItem.module.css","components/playersmanage/PlayerList.module.css","components/playersmanage/NewPlayerForm.module.css","components/profile/EditPlayerForm.module.css","components/layout/Layout.module.css","components/ui/Card.module.css","components/profile/ProfileIcon.module.css","components/layout/MainNavigation.js","store/player-context.js","components/layout/Layout.js","pages/Home.js","general/helpers.js","config.js","components/players/PlayerItem.js","components/players/PlayerList.js","pages/Players.js","components/ui/Card.js","components/playersmanage/NewPlayerForm.js","components/playersmanage/PlayerList.js","pages/PlayersManage.js","components/profile/ProfileIcon.js","components/profile/EditPlayerForm.js","components/profile/Profile.js","pages/Profile.js","App.js","index.js"],"names":["module","exports","MainNavigation","props","params","useParams","List","spacing","size","center","icon","ThemeIcon","color","radius","Item","Anchor","component","Link","to","team","onClick","pageChanged","PlayersContext","createContext","groupName","players","selectedPlayers","profilePlayerScores","totalSelectedPlayers","profileId","profileName","profileImgSrc","loadPlayers","updatePlayers","player","loadProfilePlayerScores","playerScores","updateProfilePlayerScore","playerScore","addSelectedPlayer","selectedPlayer","removeSelectedPlayer","playerId","itemIsSelectedPlayer","updateProfileId","updateProfileName","name","updateProfileImgSrc","imgSrc","updateInitialItemIndex","initialItemIndex","PlayersContextProvider","useState","setGroupName","setPlayers","userSelectedPlayers","setUserSelectedPlayers","setProfilePlayerScores","setProfileId","setProfileName","setProfileImgSrc","setInitialItemIndex","context","length","loadGroupName","newGroupName","prevGroupName","localStorage","getItem","prevProfileId","prevPlayers","updatePlayer","prevUserSelectedPlayers","concat","filter","id","some","prevPlayerScores","type","value","currentScore","find","s","undefined","attack","defense","stamina","push","playerid","prevProfileName","prevProfileImgSrc","prevInitialItemIndex","Provider","children","Layout","useContext","opened","setOpened","theme","useMantineTheme","AppShell","padding","header","Header","height","style","backgroundColor","display","alignItems","MediaQuery","largerThan","styles","Burger","o","colors","gray","mr","Group","noWrap","float","Avatar","src","flex","Text","weight","navbar","Navbar","hiddenBreakpoint","hidden","width","sm","lg","main","colorScheme","dark","className","classes","HomePage","paddingTop","href","getApiUrl","replace","getPlayerScore","scoredPlayerId","playerScoreObj","construction","Math","ceil","parseInt","resistence","technique","combinationUtil","arr","data","start","end","index","r","combinations","allPlayers","combPlayers","teamA","teamAIds","map","teamB","p","indexOf","attackA","reduce","previousValue","currentValue","defenseA","staminaA","teamBIds","attackB","defenseB","staminaB","getCombinationItem","slice","i","getCombinations","n","Array","PlayerItem","playersCxt","playerIsSelected","Number","isNaN","activeClass","teama","teamb","info","light","shadow","bg","text","marginBottom","cursor","gap","marginLeft","divcircle","buildStyles","pathColor","textColor","textSize","hideCheckbox","Checkbox","checked","onChange","tabIndex","PlayerList","matchNumber","setMatchNumber","bestMatchups","setBestMatchups","useEffect","floor","teamCombinations","sortedTeamCombinations","difference","abs","sort","a","b","parseFloat","console","log","matchTeam","teamAtotalScore","teamBtotalScore","list","Grid","Col","md","Divider","my","label","labelPosition","variant","Box","sx","textAlign","fontWeight","ActionIcon","disabled","toLocaleString","minimumFractionDigits","maximumFractionDigits","marginRight","position","marginTop","Badge","textTransform","PlayersPage","playersCtx","isLoading","setIsLoading","error","setError","fetchPlayersHandler","useCallback","fetch","response","ok","Error","json","key","playersData","playedData","sum","count","currentPlayer","message","Card","card","NewPlayerForm","addingPlayer","setAddingPlayer","nameInputRef","useRef","Button","leftIcon","event","margin","form","onSubmit","preventDefault","enteredName","current","onAddPlayer","TextInput","required","placeholder","ref","actions","ml","AccordionLabel","image","notifications","useNotifications","accItemScoresUpdated","setAccItemScoresUpdated","saveScore","method","body","JSON","stringify","headers","then","showNotification","title","CheckboxIcon","autoClose","updateScoreItem","Accordion","initialItem","iconPosition","state","onToggle","Slider","min","defaultValue","PlayersManagePage","history","useHistory","playerName","playerData","max","apply","y","ProfileIcon","onAvatarClicked","actionicon","isSelected","ICONS_LIST","EditPlayerForm","setName","setImgSrc","onAvatarClickedHandler","onUpdatePlayer","e","target","item","Profile","selectData","SelectItem","forwardRef","others","Select","itemComponent","maxDropdownHeight","nothingFound","setItem","x","updatedPlayer","allPlayersUpdated","newName","ProfilePage","App","path","exact","Home","Players","PlayersManage","ReactDOM","render","MantineProvider","NotificationsProvider","document","getElementById"],"mappings":"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","file":"static/js/main.a33f96ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PlayerList_list__2ZZ1i\",\"row\":\"PlayerList_row__1HPZC\",\"col6\":\"PlayerList_col6__3Vc1Q\",\"divcircle\":\"PlayerList_divcircle__1b2ZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"PlayerItem_info__IOYoZ\",\"teama\":\"PlayerItem_teama__j6dyZ\",\"teamb\":\"PlayerItem_teamb__2fGz3\",\"light\":\"PlayerItem_light__mB-wX\",\"divcircle\":\"PlayerItem_divcircle__o2n7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divcircle\":\"PlayerList_divcircle__1VZaT\",\"actions\":\"PlayerList_actions__qh5j_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewPlayerForm_form__7c21Z\",\"control\":\"NewPlayerForm_control__1eeMn\",\"actions\":\"NewPlayerForm_actions__2_KN1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"EditPlayerForm_form__13RZ4\",\"control\":\"EditPlayerForm_control__3JmoC\",\"actions\":\"EditPlayerForm_actions__1vyl8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__3QUDM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__39fCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionicon\":\"ProfileIcon_actionicon__1Erhd\"};","import { Anchor, List, ThemeIcon } from \"@mantine/core\";\r\nimport { SiMicrosoftteams } from \"react-icons/si\";\r\nimport { RiTeamLine } from \"react-icons/ri\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nconst MainNavigation = (props) => {\r\n  const params = useParams();\r\n\r\n  return (\r\n    <List\r\n      spacing=\"xs\"\r\n      size=\"sm\"\r\n      center\r\n      icon={\r\n        <ThemeIcon color=\"teal\" size={24} radius=\"xl\">\r\n          <SiMicrosoftteams size={12} />\r\n        </ThemeIcon>\r\n      }\r\n    >\r\n      <List.Item>\r\n        <Anchor\r\n          component={Link}\r\n          to={`/${params.team}/`}\r\n          onClick={props.pageChanged}\r\n        >\r\n          Generate teams\r\n        </Anchor>\r\n      </List.Item>\r\n      <List.Item\r\n        icon={\r\n          <ThemeIcon color=\"blue\" size={24} radius=\"xl\">\r\n            <RiTeamLine size={12} />\r\n          </ThemeIcon>\r\n        }\r\n      >\r\n        <Anchor\r\n          component={Link}\r\n          to={`/${params.team}/manage`}\r\n          onClick={props.pageChanged}\r\n        >\r\n          Score teammates\r\n        </Anchor>\r\n      </List.Item>\r\n      <List.Item\r\n        icon={\r\n          <ThemeIcon color=\"blue\" size={24} radius=\"xl\">\r\n            <CgProfile size={12} />\r\n          </ThemeIcon>\r\n        }\r\n      >\r\n        <Anchor\r\n          component={Link}\r\n          to={`/${params.team}/profile`}\r\n          onClick={props.pageChanged}\r\n        >\r\n          My Profile\r\n        </Anchor>\r\n      </List.Item>\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { createContext } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst PlayersContext = createContext({\r\n  groupName: \"\",\r\n  players: [],\r\n  selectedPlayers: [],\r\n  profilePlayerScores: [],\r\n  totalSelectedPlayers: 0,\r\n  profileId: 0,\r\n  profileName: \"\",\r\n  profileImgSrc: \"\",\r\n  loadPlayers: (players) => {},\r\n  updatePlayers: (player) => {},\r\n  loadProfilePlayerScores: (playerScores) => {},\r\n  updateProfilePlayerScore: (playerScore) => {},\r\n  addSelectedPlayer: (selectedPlayer) => {},\r\n  removeSelectedPlayer: (playerId) => {},\r\n  itemIsSelectedPlayer: (playerId) => {},\r\n  updateProfileId: (playerId) => {},\r\n  updateProfileName: (name) => {},\r\n  updateProfileImgSrc: (imgSrc) => {},\r\n  updateInitialItemIndex: (initialItemIndex) => {},\r\n});\r\n\r\nexport function PlayersContextProvider(props) {\r\n  const [groupName, setGroupName] = useState(null);\r\n  const [players, setPlayers] = useState([]);\r\n  const [userSelectedPlayers, setUserSelectedPlayers] = useState([]);\r\n  const [profilePlayerScores, setProfilePlayerScores] = useState([]);\r\n  const [profileId, setProfileId] = useState(null);\r\n  const [profileName, setProfileName] = useState(null);\r\n  const [profileImgSrc, setProfileImgSrc] = useState(null);\r\n  const [initialItemIndex, setInitialItemIndex] = useState(0);\r\n\r\n  function loadGroupNameHandler(newGroupName) {\r\n    setGroupName((prevGroupName) => {\r\n      return newGroupName;\r\n    });\r\n  }\r\n\r\n  function loadPlayersHandler(players) {\r\n    if (profileId === null && localStorage.getItem(\"PlayerId\") !== null) {\r\n      setProfileId((prevProfileId) => {\r\n        return localStorage.getItem(\"PlayerId\");\r\n      });\r\n    }\r\n\r\n    setPlayers((prevPlayers) => {\r\n      return players;\r\n    });\r\n  }\r\n\r\n  function loadProfilePlayerScoresHandler(playerScores) {\r\n    setProfilePlayerScores((prevPlayerScores) => {\r\n      return playerScores;\r\n    });\r\n  }\r\n\r\n  function updatePlayerHandler(player) {\r\n    setPlayers((prevPlayers) => {\r\n      //add update player data logic\r\n      return prevPlayers;\r\n    });\r\n  }\r\n\r\n  function updateProfilePlayerScoreHandler(playerId, type, value) {\r\n    setProfilePlayerScores((prevPlayerScores) => {\r\n      if (prevPlayerScores == null) {\r\n        prevPlayerScores = [];\r\n      }\r\n\r\n      let currentScore = prevPlayerScores.find((s) => s.playerId === playerId);\r\n      prevPlayerScores = prevPlayerScores.filter(\r\n        (s) => s.playerId !== playerId\r\n      );\r\n\r\n      if (currentScore === undefined) {\r\n        currentScore = {\r\n          attack: 0,\r\n          defense: 0,\r\n          stamina: 0,\r\n          playerId: playerId,\r\n        };\r\n      }\r\n\r\n      switch (type) {\r\n        case \"attack\":\r\n          currentScore.attack = value;\r\n          break;\r\n        case \"defense\":\r\n          currentScore.defense = value;\r\n          break;\r\n        case \"stamina\":\r\n          currentScore.stamina = value;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      prevPlayerScores.push(currentScore);\r\n      return prevPlayerScores;\r\n    });\r\n  }\r\n\r\n  function addSelectedPlayerHandler(selectedPlayer) {\r\n    setUserSelectedPlayers((prevUserSelectedPlayers) => {\r\n      return prevUserSelectedPlayers.concat(selectedPlayer);\r\n    });\r\n  }\r\n\r\n  function removeSelectedPlayerHandler(playerId) {\r\n    setUserSelectedPlayers((prevUserSelectedPlayers) => {\r\n      return prevUserSelectedPlayers.filter((player) => player.id !== playerId);\r\n    });\r\n  }\r\n\r\n  function itemIsSelectedPlayerHandler(playerId) {\r\n    return userSelectedPlayers.some((player) => player.id === playerId);\r\n  }\r\n\r\n  function updateProfileIdHandler(playerid) {\r\n    return setProfileId((prevProfileId) => {\r\n      return playerid;\r\n    });\r\n  }\r\n\r\n  function updateProfileNameHandler(name) {\r\n    return setProfileName((prevProfileName) => {\r\n      return name;\r\n    });\r\n  }\r\n\r\n  function updateProfileImgSrcHandler(imgSrc) {\r\n    return setProfileImgSrc((prevProfileImgSrc) => {\r\n      return imgSrc;\r\n    });\r\n  }\r\n\r\n  function updateInitialItemIndexHandler(initialItemIndex) {\r\n    return setInitialItemIndex((prevInitialItemIndex) => {\r\n      return initialItemIndex;\r\n    });\r\n  }\r\n\r\n  const context = {\r\n    groupName: groupName,\r\n    players: players,\r\n    profileId: profileId,\r\n    profileName: profileName,\r\n    profileImgSrc: profileImgSrc,\r\n    initialItemIndex: initialItemIndex,\r\n    selectedPlayers: userSelectedPlayers,\r\n    profilePlayerScores: profilePlayerScores,\r\n    totalSelectedPlayers: userSelectedPlayers.length,\r\n    loadGroupName: loadGroupNameHandler,\r\n    loadPlayers: loadPlayersHandler,\r\n    updatePlayer: updatePlayerHandler,\r\n    addSelectedPlayer: addSelectedPlayerHandler,\r\n    removeSelectedPlayer: removeSelectedPlayerHandler,\r\n    itemIsSelectedPlayer: itemIsSelectedPlayerHandler,\r\n    loadProfilePlayerScores: loadProfilePlayerScoresHandler,\r\n    updateProfilePlayerScore: updateProfilePlayerScoreHandler,\r\n    updateProfileId: updateProfileIdHandler,\r\n    updateProfileName: updateProfileNameHandler,\r\n    updateProfileImgSrc: updateProfileImgSrcHandler,\r\n    updateInitialItemIndex: updateInitialItemIndexHandler,\r\n  };\r\n\r\n  return (\r\n    <PlayersContext.Provider value={context}>\r\n      {props.children}\r\n    </PlayersContext.Provider>\r\n  );\r\n}\r\n\r\nexport default PlayersContext;\r\n","import MainNavigation from \"./MainNavigation\";\r\n\r\nimport classes from \"./Layout.module.css\";\r\nimport {\r\n  Anchor,\r\n  AppShell,\r\n  Avatar,\r\n  Burger,\r\n  Group,\r\n  Header,\r\n  MediaQuery,\r\n  Navbar,\r\n  Text,\r\n  //Title,\r\n  useMantineTheme,\r\n} from \"@mantine/core\";\r\n\r\nimport { useContext, useState } from \"react\";\r\nimport PlayersContext from \"../../store/player-context\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Layout = (props) => {\r\n  const profileName = useContext(PlayersContext).profileName;\r\n  const profileImgSrc = useContext(PlayersContext).profileImgSrc;\r\n  const team = useContext(PlayersContext).groupName;\r\n  const [opened, setOpened] = useState(false);\r\n  const theme = useMantineTheme();\r\n\r\n  const onMenuChangedHandler = () => {\r\n    setOpened(false);\r\n  };\r\n\r\n  return (\r\n    <AppShell\r\n      padding=\"md\"\r\n      header={\r\n        <Header height={70} padding=\"md\" style={{ backgroundColor: \"#e7e7e7\" }}>\r\n          {/* Handle other responsive styles with MediaQuery component or createStyles function */}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <MediaQuery largerThan=\"sm\" styles={{ display: \"none\" }}>\r\n              <Burger\r\n                opened={opened}\r\n                onClick={() => setOpened((o) => !o)}\r\n                size=\"sm\"\r\n                color={theme.colors.gray[6]}\r\n                mr=\"xl\"\r\n              />\r\n            </MediaQuery>\r\n\r\n            {profileName != null && (\r\n              <Anchor component={Link} to={`/${team}/profile`}>\r\n                <Group noWrap style={{ height: \"25px\", float: \"right\" }}>\r\n                  <Avatar src={profileImgSrc} radius=\"xl\" size=\"lg\" />\r\n                  <div style={{ flex: 1 }}>\r\n                    <Text size=\"sm\" weight={500}>\r\n                      {profileName}\r\n                    </Text>\r\n                  </div>\r\n                </Group>\r\n              </Anchor>\r\n            )}\r\n\r\n            {/* <Title order={3} style={{ color: \"#777\" }}>\r\n              Balanced Team Generator\r\n            </Title> */}\r\n          </div>\r\n        </Header>\r\n      }\r\n      navbar={\r\n        <Navbar\r\n          padding=\"md\"\r\n          // Breakpoint at which navbar will be hidden if hidden prop is true\r\n          hiddenBreakpoint=\"sm\"\r\n          // Hides navbar when viewport size is less than value specified in hiddenBreakpoint\r\n          hidden={!opened}\r\n          // when viewport size is less than theme.breakpoints.sm navbar width is 100%\r\n          // viewport size > theme.breakpoints.sm – width is 300px\r\n          // viewport size > theme.breakpoints.lg – width is 400px\r\n          width={{ sm: 300, lg: 400 }}\r\n        >\r\n          <MainNavigation pageChanged={onMenuChangedHandler} />\r\n        </Navbar>\r\n      }\r\n      styles={(theme) => ({\r\n        main: {\r\n          backgroundColor:\r\n            theme.colorScheme === \"dark\"\r\n              ? theme.colors.dark[8]\r\n              : theme.colors.gray[0],\r\n        },\r\n      })}\r\n    >\r\n      <main className={classes.main}>{props.children}</main>\r\n    </AppShell>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","const HomePage = () => {\r\n  return (\r\n    <div style={{ paddingTop: \"100px\" }}>\r\n      <center>\r\n        Contact site admin (\r\n        <a href=\"mailto:brobert6@gmail.com?subject=Teams generator\">\r\n          brobert6@gmail.com\r\n        </a>\r\n        ) to set up your teams.{\" \"}\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { API_URL } from \"../config\";\r\n\r\nexport const getApiUrl = (groupName) => {\r\n  return API_URL.replace(\".json\", \"/\" + groupName + \".json\");\r\n};\r\n\r\nexport const getPlayerScore = (playerScores, scoredPlayerId, type) => {\r\n  if (playerScores != null) {\r\n    const playerScoreObj = playerScores.find(\r\n      (s) => s.playerId === scoredPlayerId\r\n    );\r\n    if (playerScoreObj !== undefined) {\r\n      switch (type) {\r\n        case \"attack\":\r\n          return playerScoreObj.attack <= 10\r\n            ? playerScoreObj.attack * 10\r\n            : playerScoreObj.attack;\r\n        case \"defense\":\r\n          return playerScoreObj.defense <= 10\r\n            ? playerScoreObj.defense * 10\r\n            : playerScoreObj.defense;\r\n        case \"stamina\":\r\n          if (playerScoreObj.stamina !== undefined)\r\n            return playerScoreObj.stamina;\r\n          else if (playerScoreObj.construction !== undefined)\r\n            return Math.ceil(\r\n              ((parseInt(playerScoreObj.construction) +\r\n                parseInt(playerScoreObj.resistence) +\r\n                parseInt(playerScoreObj.technique)) *\r\n                10) /\r\n                3\r\n            );\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }\r\n  return 0;\r\n};\r\n\r\nfunction getCombinationItem(allPlayers, combPlayers, r) {\r\n  const teamA = combPlayers;\r\n  const teamAIds = teamA.map((player) => {\r\n    return player.id;\r\n  });\r\n  const teamB = allPlayers.filter((p) => teamAIds.indexOf(p.id) < 0);\r\n\r\n  return {\r\n    teamAIds: teamAIds,\r\n    attackA: teamA.reduce(function (previousValue, currentValue) {\r\n      return previousValue + currentValue.attack;\r\n    }, 0),\r\n    defenseA: teamA.reduce(function (previousValue, currentValue) {\r\n      return previousValue + currentValue.defense;\r\n    }, 0),\r\n    staminaA: teamA.reduce(function (previousValue, currentValue) {\r\n      return previousValue + currentValue.stamina;\r\n    }, 0),\r\n\r\n    teamBIds: teamB.map((player) => {\r\n      return player.id;\r\n    }),\r\n    attackB: teamB.reduce(function (previousValue, currentValue) {\r\n      return previousValue + currentValue.attack;\r\n    }, 0),\r\n    defenseB: teamB.reduce(function (previousValue, currentValue) {\r\n      return previousValue + currentValue.defense;\r\n    }, 0),\r\n    staminaB: teamB.reduce(function (previousValue, currentValue) {\r\n      return previousValue + currentValue.stamina;\r\n    }, 0),\r\n  };\r\n}\r\n\r\n// Javascript program to print all\r\n// combination of size r in an array of size n\r\n\r\n/* arr[] ---> Input Array\r\n\tdata[] ---> Temporary array to store current combination\r\n\tstart & end ---> Starting and Ending indexes in arr[]\r\n\tindex ---> Current index in data[]\r\n\tr ---> Size of a combination to be printed */\r\nfunction combinationUtil(arr, data, start, end, index, r, combinations) {\r\n  // Current combination is ready to be printed, print it\r\n  if (index === r) {\r\n    combinations.push(getCombinationItem(arr, data.slice(0, r), r));\r\n  }\r\n\r\n  // replace index with all possible elements. The condition\r\n  // \"end-i+1 >= r-index\" makes sure that including one element\r\n  // at index will make a combination with remaining elements\r\n  // at remaining positions\r\n  for (let i = start; i <= end && end - i + 1 >= r - index; i++) {\r\n    data[index] = arr[i];\r\n    combinationUtil(arr, data, i + 1, end, index + 1, r, combinations);\r\n  }\r\n}\r\n\r\n// The main function that prints all combinations of size r\r\n// in arr[] of size n. This function mainly uses combinationUtil()\r\nexport function getCombinations(arr, n, r, combinations) {\r\n  // A temporary array to store all combination one by one\r\n  let data = new Array(r);\r\n\r\n  // Print all combination using temporary array 'data[]'\r\n  combinationUtil(arr, data, 0, n - 1, 0, r, combinations);\r\n}\r\n","const API_URL = \"https://udemy-ng-http-5d0d5.firebaseio.com/players.json\";\r\n\r\nexport { API_URL };\r\n","import { useContext } from \"react\";\r\nimport PlayersContext from \"../../store/player-context\";\r\nimport { Checkbox, Group, Avatar, Text, Card } from \"@mantine/core\";\r\nimport classes from \"./PlayerItem.module.css\";\r\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\r\n\r\nconst PlayerItem = (props) => {\r\n  const playersCxt = useContext(PlayersContext);\r\n\r\n  const playerIsSelected = playersCxt.itemIsSelectedPlayer(props.id);\r\n\r\n  const attack = Number.isNaN(props.attack) ? 0 : props.attack;\r\n  const defense = Number.isNaN(props.defense) ? 0 : props.defense;\r\n  const stamina = Number.isNaN(props.stamina) ? 0 : props.stamina;\r\n\r\n  function toggleSelectedPlayerHandler() {\r\n    if (playerIsSelected) {\r\n      playersCxt.removeSelectedPlayer(props.id);\r\n    } else {\r\n      playersCxt.addSelectedPlayer({\r\n        id: props.id,\r\n        name: props.name,\r\n        imgSrc: props.imgSrc,\r\n        attack: attack,\r\n        defense: defense,\r\n        stamina: stamina,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className={\r\n        playerIsSelected\r\n          ? props.activeClass === \"teama\"\r\n            ? classes.teama\r\n            : props.activeClass === \"teamb\"\r\n            ? classes.teamb\r\n            : classes.info\r\n          : classes.light\r\n      }\r\n      onClick={toggleSelectedPlayerHandler}\r\n    >\r\n      <Card\r\n        shadow=\"sm\"\r\n        bg={playerIsSelected ? props.activeClass : \"light\"}\r\n        text={playerIsSelected ? props.activeClass : \"light\"}\r\n        style={{ width: \"100%\", marginBottom: \"10px\", cursor: \"pointer\" }}\r\n        className=\"mb-1\"\r\n        padding=\"sm\"\r\n      >\r\n        <Group\r\n          noWrap\r\n          style={{ height: \"25px\", gap: \"0px\", marginLeft: \"-10px\" }}\r\n        >\r\n          <Avatar src={props.imgSrc} radius=\"xl\" size=\"lg\" />\r\n          <div style={{ flex: 1, width: \"100%\" }}>\r\n            <Text size=\"sm\" weight={500} style={{ float: \"left\" }}>\r\n              {props.name}\r\n            </Text>\r\n            <div className={classes.divcircle}>\r\n              <CircularProgressbar\r\n                value={stamina}\r\n                text={`${stamina}`}\r\n                styles={buildStyles({\r\n                  pathColor: `rgba(34, 139, 230, ${stamina / 100})`,\r\n                  textColor: \"#228be6\",\r\n                  textSize: \"40px\",\r\n                })}\r\n              />\r\n            </div>\r\n            <div className={classes.divcircle}>\r\n              <CircularProgressbar\r\n                value={defense}\r\n                text={`${defense}`}\r\n                styles={buildStyles({\r\n                  pathColor: `rgba(64, 192, 87, ${defense / 100})`,\r\n                  textColor: \"#40c057\",\r\n                  textSize: \"40px\",\r\n                })}\r\n              />\r\n            </div>\r\n            <div className={classes.divcircle}>\r\n              <CircularProgressbar\r\n                value={attack}\r\n                text={`${attack}`}\r\n                styles={buildStyles({\r\n                  pathColor: `rgba(250, 82, 82, ${attack / 100})`,\r\n                  textColor: \"#fa5252\",\r\n                  textSize: \"40px\",\r\n                })}\r\n              />\r\n            </div>\r\n          </div>\r\n          {props.hideCheckbox !== true && (\r\n            <Checkbox\r\n              checked={playerIsSelected}\r\n              onChange={() => {}}\r\n              tabIndex={-1}\r\n              style={{ marginLeft: \"16px\" }}\r\n              // sx={{ pointerEvents: \"none\" }}\r\n            />\r\n          )}\r\n        </Group>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\nexport default PlayerItem;\r\n","import {\r\n  ActionIcon,\r\n  Badge,\r\n  Box,\r\n  Card,\r\n  Divider,\r\n  Grid,\r\n  Group,\r\n  Text,\r\n  useMantineTheme,\r\n} from \"@mantine/core\";\r\nimport { useEffect } from \"react\";\r\nimport { buildStyles, CircularProgressbar } from \"react-circular-progressbar\";\r\nimport { Fragment, useState } from \"react\";\r\nimport { getCombinations } from \"../../general/helpers\";\r\nimport {\r\n  BsFillArrowLeftCircleFill,\r\n  BsFillArrowRightCircleFill,\r\n} from \"react-icons/bs\";\r\n\r\nimport PlayerItem from \"./PlayerItem\";\r\nimport classes from \"./PlayerList.module.css\";\r\n\r\nconst PlayerList = (props) => {\r\n  const theme = useMantineTheme();\r\n  const [matchNumber, setMatchNumber] = useState(1);\r\n  const [bestMatchups, setBestMatchups] = useState([]);\r\n\r\n  const allPlayers = props.players;\r\n\r\n  useEffect(() => {\r\n    let n = props.selectedPlayers.length;\r\n    let r = Math.floor(n / 2);\r\n    let teamCombinations = [];\r\n    getCombinations(props.selectedPlayers, n, r, teamCombinations);\r\n\r\n    let sortedTeamCombinations = teamCombinations.map((team) => ({\r\n      ...team,\r\n      difference: Math.abs(\r\n        team.attackA +\r\n          team.defenseA +\r\n          team.staminaA -\r\n          team.attackB -\r\n          team.defenseB -\r\n          team.staminaB\r\n      ),\r\n    }));\r\n    sortedTeamCombinations = sortedTeamCombinations\r\n      .sort((a, b) => parseFloat(a.difference) - parseFloat(b.difference))\r\n      .slice(0, 5);\r\n\r\n    setBestMatchups(sortedTeamCombinations);\r\n    setMatchNumber(1);\r\n    console.log(\"reset combinations...\");\r\n  }, [props.selectedPlayers]);\r\n\r\n  let matchTeam = bestMatchups[matchNumber - 1];\r\n  if (matchTeam !== undefined) {\r\n    matchTeam.teamAtotalScore =\r\n      matchTeam.attackA + matchTeam.defenseA + matchTeam.staminaA;\r\n    matchTeam.teamBtotalScore =\r\n      matchTeam.attackB + matchTeam.defenseB + matchTeam.staminaB;\r\n  }\r\n\r\n  let teamA = [];\r\n  let teamB = [];\r\n\r\n  if (matchTeam !== undefined) {\r\n    teamA = props.selectedPlayers.filter(\r\n      (p) => matchTeam.teamAIds.indexOf(p.id) >= 0\r\n    );\r\n    teamB = props.selectedPlayers.filter(\r\n      (p) => matchTeam.teamBIds.indexOf(p.id) >= 0\r\n    );\r\n  }\r\n\r\n  if (bestMatchups.length >= matchNumber) {\r\n    teamA.attack = Math.floor(\r\n      bestMatchups[matchNumber - 1].attackA /\r\n        bestMatchups[matchNumber - 1].teamAIds.length\r\n    );\r\n    teamA.defense = Math.floor(\r\n      bestMatchups[matchNumber - 1].defenseA /\r\n        bestMatchups[matchNumber - 1].teamAIds.length\r\n    );\r\n    teamA.stamina = Math.floor(\r\n      bestMatchups[matchNumber - 1].staminaA /\r\n        bestMatchups[matchNumber - 1].teamAIds.length\r\n    );\r\n\r\n    teamB.attack = Math.floor(\r\n      bestMatchups[matchNumber - 1].attackB /\r\n        bestMatchups[matchNumber - 1].teamBIds.length\r\n    );\r\n    teamB.defense = Math.floor(\r\n      bestMatchups[matchNumber - 1].defenseB /\r\n        bestMatchups[matchNumber - 1].teamBIds.length\r\n    );\r\n    teamB.stamina = Math.floor(\r\n      bestMatchups[matchNumber - 1].staminaB /\r\n        bestMatchups[matchNumber - 1].teamBIds.length\r\n    );\r\n  }\r\n\r\n  const onNextHandler = () => {\r\n    setMatchNumber(matchNumber + 1);\r\n  };\r\n\r\n  const onPrevHandler = () => {\r\n    setMatchNumber(matchNumber - 1);\r\n  };\r\n\r\n  const getMatchPercentage = () => {\r\n    return (\r\n      matchTeam.teamAtotalScore < matchTeam.teamBtotalScore\r\n        ? (matchTeam.teamAtotalScore / matchTeam.teamBtotalScore) * 100\r\n        : (matchTeam.teamBtotalScore / matchTeam.teamAtotalScore) * 100\r\n    ).toLocaleString(\"en\", {\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ul className={classes.list}>\r\n        {allPlayers.map((player) => (\r\n          <PlayerItem\r\n            key={player.id}\r\n            id={player.id}\r\n            name={player.name}\r\n            attack={player.attack}\r\n            defense={player.defense}\r\n            stamina={player.stamina}\r\n            imgSrc={player.imgSrc}\r\n            activeClass=\"info\"\r\n          />\r\n        ))}\r\n      </ul>\r\n\r\n      {teamA.length > 1 && (\r\n        <Grid>\r\n          <Grid.Col md={12}>\r\n            <Divider\r\n              my=\"xs\"\r\n              label=\"Generated teams\"\r\n              labelPosition=\"center\"\r\n              variant=\"dashed\"\r\n            />\r\n            <Box\r\n              sx={(theme) => ({\r\n                textAlign: \"center\",\r\n                padding: \"10px 0 0 0\",\r\n                fontWeight: \"bold\",\r\n              })}\r\n            >\r\n              <ActionIcon\r\n                onClick={onPrevHandler}\r\n                disabled={matchNumber === 1}\r\n                style={{ float: \"left\", marginLeft: \"10px\" }}\r\n              >\r\n                <BsFillArrowLeftCircleFill\r\n                  size=\"40\"\r\n                  color={matchNumber === 1 ? \"#ced4da\" : \"#228be6\"}\r\n                />\r\n              </ActionIcon>\r\n              #{matchNumber} Best matchup {getMatchPercentage()}%\r\n              <ActionIcon\r\n                onClick={onNextHandler}\r\n                disabled={matchNumber >= 5}\r\n                style={{ float: \"right\", marginRight: \"10px\" }}\r\n              >\r\n                <BsFillArrowRightCircleFill\r\n                  size=\"40\"\r\n                  color={matchNumber >= 5 ? \"#ced4da\" : \"#228be6\"}\r\n                />\r\n              </ActionIcon>\r\n            </Box>\r\n          </Grid.Col>\r\n          <Grid.Col md={6}>\r\n            <Card shadow=\"sm\" padding=\"lg\" style={{ paddingTop: 0 }}>\r\n              <Group\r\n                position=\"apart\"\r\n                style={{ marginBottom: 5, marginTop: theme.spacing.sm }}\r\n              >\r\n                <div style={{ width: \"100%\" }}>\r\n                  <Badge\r\n                    variant=\"filled\"\r\n                    style={{\r\n                      backgroundColor: \"#bfefe1\",\r\n                      padding: \"18px 6px 18px 7px\",\r\n                      float: \"right\",\r\n                    }}\r\n                  >\r\n                    <Text\r\n                      size=\"md\"\r\n                      weight={700}\r\n                      style={{ float: \"left\" }}\r\n                      color=\"black\"\r\n                      styles={{ textTransform: \"none !important\" }}\r\n                    >\r\n                      Team A <small>({matchTeam.teamAtotalScore})</small>\r\n                    </Text>\r\n                    <div className={classes.divcircle}>\r\n                      <CircularProgressbar\r\n                        value={teamA.stamina}\r\n                        text={`${teamA.stamina}`}\r\n                        styles={buildStyles({\r\n                          pathColor: `rgba(34, 139, 230, ${\r\n                            teamA.stamina / 100\r\n                          })`,\r\n                          textColor: \"#228be6\",\r\n                          textSize: \"40px\",\r\n                        })}\r\n                      />\r\n                    </div>\r\n                    <div className={classes.divcircle}>\r\n                      <CircularProgressbar\r\n                        value={teamA.defense}\r\n                        text={`${teamA.defense}`}\r\n                        styles={buildStyles({\r\n                          pathColor: `rgba(64, 192, 87, ${\r\n                            teamA.defense / 100\r\n                          })`,\r\n                          textColor: \"#40c057\",\r\n                          textSize: \"40px\",\r\n                        })}\r\n                      />\r\n                    </div>\r\n                    <div className={classes.divcircle}>\r\n                      <CircularProgressbar\r\n                        value={teamA.attack}\r\n                        text={`${teamA.attack}`}\r\n                        styles={buildStyles({\r\n                          pathColor: `rgba(250, 82, 82, ${teamA.attack / 100})`,\r\n                          textColor: \"#fa5252\",\r\n                          textSize: \"40px\",\r\n                        })}\r\n                      />\r\n                    </div>\r\n                  </Badge>\r\n                </div>\r\n                <ul className={classes.list}>\r\n                  {teamA.map((player) => (\r\n                    <PlayerItem\r\n                      key={player.id}\r\n                      id={player.id}\r\n                      name={player.name}\r\n                      attack={player.attack}\r\n                      defense={player.defense}\r\n                      stamina={player.stamina}\r\n                      imgSrc={player.imgSrc}\r\n                      hideCheckbox={true}\r\n                      activeClass=\"teama\"\r\n                    />\r\n                  ))}\r\n                </ul>\r\n              </Group>\r\n            </Card>\r\n          </Grid.Col>\r\n          <Grid.Col md={6}>\r\n            <Card shadow=\"sm\" padding=\"lg\" style={{ paddingTop: 0 }}>\r\n              <Group\r\n                position=\"apart\"\r\n                style={{ marginBottom: 5, marginTop: theme.spacing.sm }}\r\n              >\r\n                <Badge\r\n                  color=\"yellow\"\r\n                  variant=\"filled\"\r\n                  size=\"lg\"\r\n                  style={{\r\n                    backgroundColor: \"#f7e5b0\",\r\n                    padding: \"18px 6px 18px 7px\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    size=\"md\"\r\n                    weight={700}\r\n                    style={{ float: \"left\" }}\r\n                    color=\"black\"\r\n                  >\r\n                    Team B <small>({matchTeam.teamBtotalScore})</small>\r\n                  </Text>\r\n                  <div className={classes.divcircle}>\r\n                    <CircularProgressbar\r\n                      value={teamB.stamina}\r\n                      text={`${teamB.stamina}`}\r\n                      styles={buildStyles({\r\n                        pathColor: `rgba(34, 139, 230, ${teamB.stamina / 100})`,\r\n                        textColor: \"#228be6\",\r\n                        textSize: \"40px\",\r\n                      })}\r\n                    />\r\n                  </div>\r\n                  <div className={classes.divcircle}>\r\n                    <CircularProgressbar\r\n                      value={teamB.defense}\r\n                      text={`${teamB.defense}`}\r\n                      styles={buildStyles({\r\n                        pathColor: `rgba(64, 192, 87, ${teamB.defense / 100})`,\r\n                        textColor: \"#40c057\",\r\n                        textSize: \"40px\",\r\n                      })}\r\n                    />\r\n                  </div>\r\n                  <div className={classes.divcircle}>\r\n                    <CircularProgressbar\r\n                      value={teamB.attack}\r\n                      text={`${teamB.attack}`}\r\n                      styles={buildStyles({\r\n                        pathColor: `rgba(250, 82, 82, ${teamB.attack / 100})`,\r\n                        textColor: \"#fa5252\",\r\n                        textSize: \"40px\",\r\n                      })}\r\n                    />\r\n                  </div>\r\n                </Badge>\r\n\r\n                <ul className={classes.list}>\r\n                  {teamB.map((player) => (\r\n                    <PlayerItem\r\n                      key={player.id}\r\n                      id={player.id}\r\n                      name={player.name}\r\n                      attack={player.attack}\r\n                      defense={player.defense}\r\n                      stamina={player.stamina}\r\n                      imgSrc={player.imgSrc}\r\n                      hideCheckbox={true}\r\n                      activeClass=\"teamb\"\r\n                    />\r\n                  ))}\r\n                </ul>\r\n              </Group>\r\n            </Card>\r\n          </Grid.Col>\r\n        </Grid>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PlayerList;\r\n","import { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PlayerList from \"../components/players/PlayerList\";\r\nimport PlayersContext from \"../store/player-context\";\r\nimport { getApiUrl, getPlayerScore } from \"../general/helpers\";\r\n\r\n//const players = require(\"../components/players.json\");\r\n\r\nfunction PlayersPage() {\r\n  const playersCtx = useContext(PlayersContext);\r\n\r\n  const params = useParams();\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchPlayersHandler = useCallback(async () => {\r\n    console.log(`fetching data for ${params.team} ...`);\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      playersCtx.loadGroupName(params.team);\r\n      const response = await fetch(getApiUrl(params.team));\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      const playersData = [];\r\n      for (const key in data) {\r\n        const playedData = {\r\n          id: key,\r\n          ...data[key],\r\n        };\r\n        playersData.push(playedData);\r\n      }\r\n\r\n      //calculate player scores\r\n      for (const player of playersData) {\r\n        for (const type of [\"attack\", \"defense\", \"stamina\"]) {\r\n          let initialValue = 0;\r\n          let sum = playersData.reduce(function (previousValue, currentValue) {\r\n            return (\r\n              previousValue +\r\n              getPlayerScore(currentValue.playerScores, player.id, type)\r\n            );\r\n          }, initialValue);\r\n          let count = playersData.reduce(function (\r\n            previousValue,\r\n            currentValue\r\n          ) {\r\n            return (\r\n              previousValue +\r\n              (getPlayerScore(currentValue.playerScores, player.id, type) > 0\r\n                ? 1\r\n                : 0)\r\n            );\r\n          },\r\n          initialValue);\r\n          player[type] = Math.floor(sum / count);\r\n        }\r\n      }\r\n\r\n      //sort by score and load\r\n      playersCtx.loadPlayers(\r\n        playersData.sort(\r\n          (b, a) =>\r\n            a.attack + a.defense + a.stamina - b.attack - b.defense - b.stamina\r\n        )\r\n      );\r\n\r\n      if (localStorage.getItem(\"PlayerId\") !== null) {\r\n        const currentPlayer = playersData.find(\r\n          (p) => p.id === localStorage.getItem(\"PlayerId\")\r\n        );\r\n        if (currentPlayer !== undefined) {\r\n          playersCtx.loadProfilePlayerScores(currentPlayer.playerScores);\r\n          playersCtx.updateProfileName(currentPlayer.name);\r\n          playersCtx.updateProfileImgSrc(currentPlayer.imgSrc);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  }, [params.team]);\r\n\r\n  useEffect(() => {\r\n    if (playersCtx.players.length === 0) {\r\n      fetchPlayersHandler();\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, [fetchPlayersHandler, playersCtx.players.length]);\r\n\r\n  if (isLoading) {\r\n    return <section>Loading...</section>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>{error}</p>;\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <PlayerList\r\n        players={playersCtx.players}\r\n        selectedPlayers={playersCtx.selectedPlayers}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PlayersPage;\r\n","import classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import { Button, TextInput } from \"@mantine/core\";\r\nimport { Fragment, useRef, useState } from \"react\";\r\nimport Card from \"../ui/Card\";\r\nimport classes from \"./NewPlayerForm.module.css\";\r\nimport { AiOutlineUserAdd } from \"react-icons/ai\";\r\n\r\nconst NewPlayerForm = (props) => {\r\n  const [addingPlayer, setAddingPlayer] = useState(false);\r\n\r\n  const nameInputRef = useRef();\r\n\r\n  const addNewPlayerHandler = (event) => {\r\n    setAddingPlayer(true);\r\n  };\r\n\r\n  const cancelHandler = (event) => {\r\n    setAddingPlayer(false);\r\n    nameInputRef.current.value = \"\";\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n\r\n    props.onAddPlayer(enteredName);\r\n\r\n    setAddingPlayer(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {!addingPlayer && (\r\n        <Button\r\n          leftIcon={<AiOutlineUserAdd />}\r\n          onClick={addNewPlayerHandler}\r\n          style={{ margin: \"20px\" }}\r\n        >\r\n          Add New Player\r\n        </Button>\r\n      )}\r\n\r\n      {addingPlayer && (\r\n        <Card>\r\n          <form className={classes.form} onSubmit={submitHandler}>\r\n            <TextInput\r\n              required\r\n              label=\"Name\"\r\n              placeholder=\"Player name\"\r\n              ref={nameInputRef}\r\n            />\r\n\r\n            {/* <div className={classes.control}>\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input type=\"text\" required id=\"name\" ref={nameInputRef} />\r\n            </div> */}\r\n            <div className={classes.actions}>\r\n              <Button type=\"button\" color=\"gray\" onClick={cancelHandler}>\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\" color=\"indigo\" ml={10}>\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlayerForm;\r\n","import {\r\n  Group,\r\n  Avatar,\r\n  Text,\r\n  Accordion,\r\n  Slider,\r\n  CheckboxIcon,\r\n  Button,\r\n} from \"@mantine/core\";\r\nimport { useNotifications } from \"@mantine/notifications\";\r\nimport { Fragment, useContext } from \"react\";\r\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { getApiUrl, getPlayerScore } from \"../../general/helpers\";\r\nimport PlayersContext from \"../../store/player-context\";\r\n\r\nimport classes from \"./PlayerList.module.css\";\r\n\r\nconst AccordionLabel = ({ label, image, attack, defense, stamina }) => {\r\n  return (\r\n    <Group noWrap>\r\n      <Avatar src={image} radius=\"xl\" size=\"lg\" />\r\n      <div style={{ width: \"100%\" }}>\r\n        <Text style={{ float: \"left\" }}>{label}</Text>\r\n        <div className={classes.divcircle}>\r\n          <CircularProgressbar\r\n            value={stamina}\r\n            text={`${stamina}`}\r\n            styles={buildStyles({\r\n              pathColor: `rgba(34, 139, 230, ${stamina / 100})`,\r\n              textColor: \"#228be6\",\r\n              textSize: \"40px\",\r\n            })}\r\n          />\r\n        </div>\r\n        <div className={classes.divcircle}>\r\n          <CircularProgressbar\r\n            value={defense}\r\n            text={`${defense}`}\r\n            styles={buildStyles({\r\n              pathColor: `rgba(64, 192, 87, ${defense / 100})`,\r\n              textColor: \"#40c057\",\r\n              textSize: \"40px\",\r\n            })}\r\n          />\r\n        </div>\r\n        <div className={classes.divcircle}>\r\n          <CircularProgressbar\r\n            value={attack}\r\n            text={`${attack}`}\r\n            styles={buildStyles({\r\n              pathColor: `rgba(250, 82, 82, ${attack / 100})`,\r\n              textColor: \"#fa5252\",\r\n              textSize: \"40px\",\r\n            })}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Group>\r\n  );\r\n};\r\n\r\nconst PlayerList = () => {\r\n  const playersCtx = useContext(PlayersContext);\r\n  const notifications = useNotifications();\r\n  const params = useParams();\r\n\r\n  const profileId = playersCtx.profileId;\r\n  const players = playersCtx.players;\r\n  const profilePlayerScores = playersCtx.profilePlayerScores;\r\n  const initialItemIndex = playersCtx.initialItemIndex;\r\n\r\n  const [accItemScoresUpdated, setAccItemScoresUpdated] = useState(false);\r\n\r\n  //this shuld not run\r\n  if (\r\n    (playersCtx.profilePlayerScores === undefined ||\r\n      playersCtx.profilePlayerScores.length === 0) &&\r\n    playersCtx.players.find((p) => p.id === profileId).playerScores != null\r\n  ) {\r\n    playersCtx.loadProfilePlayerScores(\r\n      playersCtx.players.find((p) => p.id === profileId).playerScores\r\n    );\r\n  }\r\n\r\n  const saveClickHandler = () => {\r\n    saveScore();\r\n  };\r\n\r\n  const onAccordionChanged = (state) => {\r\n    for (let i = 0; i < players.length; i++) {\r\n      if (state[i] === true) {\r\n        playersCtx.updateInitialItemIndex(i);\r\n        break;\r\n      }\r\n    }\r\n\r\n    //save to database\r\n    if (accItemScoresUpdated) {\r\n      saveScore();\r\n    }\r\n  };\r\n\r\n  const saveScore = () => {\r\n    fetch(\r\n      getApiUrl(params.team).replace(\".json\", \"\") +\r\n        \"/\" +\r\n        profileId +\r\n        \"/playerScores.json\",\r\n      {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(profilePlayerScores),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    ).then(() => {\r\n      notifications.showNotification({\r\n        title: \"Scores update\",\r\n        message: \"Data was saved\",\r\n        color: \"teal\",\r\n        icon: <CheckboxIcon />,\r\n        autoClose: 2000,\r\n      });\r\n      setAccItemScoresUpdated(false);\r\n    });\r\n  };\r\n\r\n  const updateScoreItem = (playerId, type, value) => {\r\n    setAccItemScoresUpdated(true);\r\n    playersCtx.updateProfilePlayerScore(playerId, type, value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Accordion\r\n        initialItem={initialItemIndex}\r\n        iconPosition=\"right\"\r\n        onChange={onAccordionChanged}\r\n      >\r\n        {players\r\n          .filter((p) => p.id !== profileId)\r\n          .map((player) => (\r\n            <Accordion.Item\r\n              key={player.id}\r\n              label={\r\n                <AccordionLabel\r\n                  image={player.imgSrc}\r\n                  attack={getPlayerScore(\r\n                    profilePlayerScores,\r\n                    player.id,\r\n                    \"attack\"\r\n                  )}\r\n                  defense={getPlayerScore(\r\n                    profilePlayerScores,\r\n                    player.id,\r\n                    \"defense\"\r\n                  )}\r\n                  stamina={getPlayerScore(\r\n                    profilePlayerScores,\r\n                    player.id,\r\n                    \"stamina\"\r\n                  )}\r\n                  label={player.name}\r\n                />\r\n              }\r\n              onToggle\r\n            >\r\n              <Text>Atac</Text>\r\n              <Slider\r\n                color=\"red\"\r\n                min={11}\r\n                defaultValue={getPlayerScore(\r\n                  profilePlayerScores,\r\n                  player.id,\r\n                  \"attack\"\r\n                )}\r\n                onChange={(value) =>\r\n                  updateScoreItem(player.id, \"attack\", value)\r\n                }\r\n              />\r\n              <Text>Defense</Text>\r\n              <Slider\r\n                color=\"green\"\r\n                min={11}\r\n                defaultValue={getPlayerScore(\r\n                  profilePlayerScores,\r\n                  player.id,\r\n                  \"defense\"\r\n                )}\r\n                onChange={(value) =>\r\n                  updateScoreItem(player.id, \"defense\", value)\r\n                }\r\n              />\r\n              <Text>Stamina</Text>\r\n              <Slider\r\n                min={11}\r\n                defaultValue={getPlayerScore(\r\n                  profilePlayerScores,\r\n                  player.id,\r\n                  \"stamina\"\r\n                )}\r\n                onChange={(value) =>\r\n                  updateScoreItem(player.id, \"stamina\", value)\r\n                }\r\n              />\r\n            </Accordion.Item>\r\n          ))}\r\n      </Accordion>\r\n      {accItemScoresUpdated && (\r\n        <div className={classes.actions}>\r\n          <Button\r\n            type=\"button\"\r\n            color=\"indigo\"\r\n            ml={10}\r\n            onClick={saveClickHandler}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PlayerList;\r\n","import { useNotifications } from \"@mantine/notifications\";\r\nimport { useContext } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\nimport NewPlayerForm from \"../components/playersmanage/NewPlayerForm\";\r\nimport PlayerList from \"../components/playersmanage/PlayerList\";\r\nimport { getApiUrl } from \"../general/helpers\";\r\nimport PlayersContext from \"../store/player-context\";\r\n\r\nfunction PlayersManagePage() {\r\n  const playersCtx = useContext(PlayersContext);\r\n  const params = useParams();\r\n  const notifications = useNotifications();\r\n\r\n  const profileId = playersCtx.profileId;\r\n\r\n  const history = useHistory();\r\n  if (playersCtx.players === null || playersCtx.players.length === 0) {\r\n    history.replace(`/${params.team}/`);\r\n  }\r\n  if (profileId === 0 || profileId === null) {\r\n    notifications.showNotification({\r\n      title: \"Choose profile\",\r\n      message: \"You must choose your profile to score other players...\",\r\n      color: \"teal\",\r\n      autoClose: 4000,\r\n    });\r\n    history.replace(`/${params.team}/profile`);\r\n  }\r\n\r\n  const addPlayerHandler = (playerName) => {\r\n    const playerData = {\r\n      id: Math.max.apply(\r\n        Math,\r\n        playersCtx.players.map(function (o) {\r\n          return o.y;\r\n        })\r\n      ),\r\n      name: playerName,\r\n    };\r\n\r\n    let playersData = [...playersCtx.players];\r\n    playersData.push(playerData);\r\n\r\n    playersCtx.loadPlayers(playersData);\r\n\r\n    fetch(getApiUrl(params.team), {\r\n      method: \"POST\",\r\n      body: JSON.stringify(playerData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(() => {\r\n      console.log(\"submitted...\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2>Manage players</h2>\r\n      {playersCtx.players !== undefined && playersCtx.players.length < 15 && (\r\n        <p>\r\n          <i>Make sure all playes are added to list</i>\r\n        </p>\r\n      )}\r\n      <NewPlayerForm onAddPlayer={addPlayerHandler} />\r\n      {profileId !== null && <PlayerList />}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default PlayersManagePage;\r\n","import { ActionIcon, Avatar } from \"@mantine/core\";\r\n\r\nimport classes from \"./ProfileIcon.module.css\";\r\n\r\nconst ProfileIcon = (props) => {\r\n  const onClickHandler = () => {\r\n    return props.onAvatarClicked(props.imgSrc);\r\n  };\r\n\r\n  return (\r\n    <ActionIcon onClick={onClickHandler} className={classes.actionicon}>\r\n      <Avatar\r\n        src={props.imgSrc}\r\n        radius=\"xl\"\r\n        size=\"lg\"\r\n        style={{\r\n          backgroundColor: props.isSelected ? \"#5481a9\" : \"transparent\",\r\n        }}\r\n      />\r\n    </ActionIcon>\r\n  );\r\n};\r\n\r\nexport default ProfileIcon;\r\n","import { Button, TextInput } from \"@mantine/core\";\r\nimport { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport PlayersContext from \"../../store/player-context\";\r\nimport Card from \"../ui/Card\";\r\nimport classes from \"./EditPlayerForm.module.css\";\r\nimport ProfileIcon from \"./ProfileIcon\";\r\n\r\nconst ICONS_LIST = [\r\n  \"https://img.icons8.com/clouds/256/000000/futurama-bender.png\",\r\n  \"https://img.icons8.com/clouds/2x/homer-simpson.png\",\r\n  \"https://img.icons8.com/clouds/256/000000/futurama-mom.png\",\r\n  \"https://img.icons8.com/clouds/2x/spongebob-squarepants.png\",\r\n  \"https://img.icons8.com/clouds/2x/mando.png\",\r\n  \"https://img.icons8.com/clouds/2x/stormtrooper.png\",\r\n  \"https://img.icons8.com/clouds/2x/kokichi.png\",\r\n  \"https://img.icons8.com/clouds/2x/Bakugou.png\",\r\n  \"https://img.icons8.com/bubbles/2x/walter-white.png\",\r\n  \"https://img.icons8.com/clouds/2x/super-mario.png\",\r\n  \"https://img.icons8.com/clouds/2x/anonymous-mask.png\",\r\n  \"https://img.icons8.com/clouds/2x/jake.png\",\r\n  \"https://img.icons8.com/clouds/2x/nurse-female.png\",\r\n  \"https://img.icons8.com/clouds/2x/camo-cream.png\",\r\n  \"https://img.icons8.com/clouds/2x/user-female.png\",\r\n  \"https://img.icons8.com/clouds/2x/user-male.png\",\r\n  \"https://img.icons8.com/clouds/2x/winner.png\",\r\n  \"https://img.icons8.com/clouds/2x/gender-neutral-user.png\",\r\n  \"https://img.icons8.com/clouds/2x/santa.png\",\r\n  \"https://img.icons8.com/clouds/2x/champagne-bottle.png\",\r\n  \"https://img.icons8.com/clouds/2x/edvard-munch.png\",\r\n  \"https://img.icons8.com/clouds/2x/frida-kahlo.png\",\r\n  \"https://img.icons8.com/clouds/2x/fraud.png\",\r\n  \"https://img.icons8.com/clouds/2x/comedy.png\",\r\n];\r\n\r\nconst EditPlayerForm = (props) => {\r\n  const playersCxt = useContext(PlayersContext);\r\n\r\n  useEffect(() => {\r\n    const currentPlayer = playersCxt.players.find((p) => p.id === props.id);\r\n    setName(currentPlayer === undefined ? \"\" : currentPlayer.name);\r\n    setImgSrc(currentPlayer === undefined ? \"\" : currentPlayer.imgSrc);\r\n  }, [props.id]);\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [imgSrc, setImgSrc] = useState(\"\");\r\n\r\n  const onAvatarClickedHandler = (value) => {\r\n    setImgSrc(value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    props.onUpdatePlayer(name, imgSrc);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <hr style={{ marginBottom: \"20px\" }} />\r\n      <Card>\r\n        <form className={classes.form} onSubmit={submitHandler}>\r\n          <TextInput\r\n            required\r\n            label=\"Name\"\r\n            placeholder=\"Player name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n\r\n          {ICONS_LIST.map((item) => (\r\n            <ProfileIcon\r\n              key={item}\r\n              imgSrc={item}\r\n              isSelected={item === imgSrc}\r\n              onAvatarClicked={onAvatarClickedHandler}\r\n            />\r\n          ))}\r\n\r\n          <div className={classes.actions}>\r\n            <Button type=\"submit\" color=\"indigo\" ml={10}>\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditPlayerForm;\r\n","import { Group, Avatar, Text, Select, CheckboxIcon } from \"@mantine/core\";\r\nimport { useNotifications } from \"@mantine/notifications\";\r\nimport { forwardRef, Fragment, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport PlayersContext from \"../../store/player-context\";\r\nimport EditPlayerForm from \"./EditPlayerForm\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getApiUrl } from \"../../general/helpers\";\r\n\r\nconst Profile = () => {\r\n  const playersCtx = useContext(PlayersContext);\r\n  const notifications = useNotifications();\r\n  const params = useParams();\r\n\r\n  const playerId = playersCtx.profileId;\r\n\r\n  const history = useHistory();\r\n  if (playersCtx.players === null || playersCtx.players.length === 0)\r\n    history.replace(`/${params.team}/`);\r\n\r\n  const selectData = playersCtx.players.map((player) => {\r\n    return {\r\n      id: player.id,\r\n      image: player.imgSrc,\r\n      label: player.name,\r\n      value: player.id,\r\n    };\r\n  });\r\n\r\n  const SelectItem = forwardRef(({ id, image, label, ...others }, ref) => (\r\n    <div ref={ref} {...others}>\r\n      <Group noWrap>\r\n        <Avatar src={image} />\r\n\r\n        <div>\r\n          <Text>{label}</Text>\r\n        </div>\r\n      </Group>\r\n    </div>\r\n  ));\r\n\r\n  const onProfileIdChanged = (value) => {\r\n    if (value !== null) {\r\n      playersCtx.updateProfileId(value);\r\n      localStorage.setItem(\"PlayerId\", value);\r\n\r\n      const currentPlayer = playersCtx.players.find((x) => x.id === value);\r\n      playersCtx.updateProfileName(currentPlayer.name);\r\n      playersCtx.updateProfileImgSrc(currentPlayer.imgSrc);\r\n\r\n      //save prev scores to context:players\r\n      const updatedPlayer = {\r\n        ...currentPlayer,\r\n        playerScores: playersCtx.playerScores,\r\n      };\r\n      const allPlayersUpdated = [\r\n        ...playersCtx.players.filter((p) => p.id !== value),\r\n        updatedPlayer,\r\n      ];\r\n      playersCtx.loadPlayers(allPlayersUpdated);\r\n\r\n      //load new scores\r\n      playersCtx.loadProfilePlayerScores(\r\n        playersCtx.players.find((p) => p.id === value).playerScores\r\n      );\r\n    }\r\n  };\r\n\r\n  const onProfileChanged = (newName, imgSrc) => {\r\n    const currentPlayer = playersCtx.players.find((x) => x.id === playerId);\r\n    const updatedPlayer = { ...currentPlayer, name: newName, imgSrc: imgSrc };\r\n\r\n    playersCtx.updateProfileName(updatedPlayer.name);\r\n    playersCtx.updateProfileImgSrc(updatedPlayer.imgSrc);\r\n\r\n    fetch(\r\n      getApiUrl(params.team).replace(\".json\", \"\") +\r\n        \"/\" +\r\n        updatedPlayer.id +\r\n        \".json\",\r\n      {\r\n        method: \"PUT\",\r\n        body: JSON.stringify(updatedPlayer),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    ).then(() => {\r\n      const allPlayersUpdated = [\r\n        ...playersCtx.players.filter((p) => p.id !== playerId),\r\n        updatedPlayer,\r\n      ];\r\n\r\n      playersCtx.loadPlayers(allPlayersUpdated);\r\n\r\n      notifications.showNotification({\r\n        title: \"Profile update\",\r\n        message: \"Data was saved\",\r\n        color: \"teal\",\r\n        icon: <CheckboxIcon />,\r\n        autoClose: 2000,\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Select\r\n        label=\"Choose profile\"\r\n        placeholder=\"Identify yourself\"\r\n        itemComponent={SelectItem}\r\n        data={selectData}\r\n        value={playerId}\r\n        //searchable\r\n        maxDropdownHeight={400}\r\n        nothingFound=\"Nobody here\"\r\n        // filter={(value, item) =>\r\n        //   item.label.toLowerCase().includes(value.toLowerCase().trim())\r\n        // }\r\n        onChange={onProfileIdChanged}\r\n        //clearable\r\n      />\r\n\r\n      {playerId !== null && (\r\n        <EditPlayerForm id={playerId} onUpdatePlayer={onProfileChanged} />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import Profile from \"../components/profile/Profile\";\r\n\r\nconst ProfilePage = () => {\r\n  return <Profile />;\r\n};\r\n\r\nexport default ProfilePage;\r\n","import { Fragment } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport HomePage from \"./pages/Home\";\n\nimport PlayersPage from \"./pages/Players\";\nimport PlayersManagePage from \"./pages/PlayersManage\";\nimport ProfilePage from \"./pages/Profile\";\n\nfunction App() {\n  return (\n    <Fragment>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n        <Route path=\"/:team/\" exact>\n          <Layout>\n            <PlayersPage />\n          </Layout>\n        </Route>\n        <Route path=\"/:team/manage\">\n          <Layout>\n            <PlayersManagePage />\n          </Layout>\n        </Route>\n        <Route path=\"/:team/profile\">\n          <Layout>\n            <ProfilePage />\n          </Layout>\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { PlayersContextProvider } from \"./store/player-context\";\nimport { MantineProvider } from \"@mantine/core\";\nimport { NotificationsProvider } from \"@mantine/notifications\";\n\nReactDOM.render(\n  <PlayersContextProvider>\n    <BrowserRouter>\n      <MantineProvider theme={{ colorScheme: \"light\" }}>\n        <NotificationsProvider>\n          <App />\n        </NotificationsProvider>\n      </MantineProvider>\n    </BrowserRouter>\n  </PlayersContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}